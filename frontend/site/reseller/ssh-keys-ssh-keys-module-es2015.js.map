{"version":3,"sources":["./src/app/reseller/cloud/ssh-keys/ssh-key-create/ssh-key-create.component.html","./src/app/reseller/cloud/ssh-keys/ssh-key-details/ssh-key-details.component.html","./src/app/reseller/cloud/ssh-keys/ssh-key-edit/ssh-key-edit.component.html","./src/app/reseller/cloud/ssh-keys/ssh-key-list/ssh-key-list.component.html","./src/app/reseller/cloud/ssh-keys/tabs/ssh-key-details-overview/ssh-key-details-overview.component.html","./src/app/reseller/cloud/ssh-keys/tabs/ssh-key-edit-form/ssh-key-edit-form.component.html","./src/app/reseller/cloud/ssh-keys/ssh-key-create/ssh-key-create.component.scss","./src/app/reseller/cloud/ssh-keys/ssh-key-create/ssh-key-create.component.ts","./src/app/reseller/cloud/ssh-keys/ssh-key-details/ssh-key-details.component.scss","./src/app/reseller/cloud/ssh-keys/ssh-key-details/ssh-key-details.component.ts","./src/app/reseller/cloud/ssh-keys/ssh-key-edit/ssh-key-edit.component.scss","./src/app/reseller/cloud/ssh-keys/ssh-key-edit/ssh-key-edit.component.ts","./src/app/reseller/cloud/ssh-keys/ssh-key-list-ui.service.ts","./src/app/reseller/cloud/ssh-keys/ssh-key-list/ssh-key-list.component.scss","./src/app/reseller/cloud/ssh-keys/ssh-key-list/ssh-key-list.component.ts","./src/app/reseller/cloud/ssh-keys/ssh-key-ui.service.ts","./src/app/reseller/cloud/ssh-keys/ssh-keys-routing.module.ts","./src/app/reseller/cloud/ssh-keys/ssh-keys.module.ts","./src/app/reseller/cloud/ssh-keys/tabs/ssh-key-details-overview/ssh-key-details-overview.component.scss","./src/app/reseller/cloud/ssh-keys/tabs/ssh-key-details-overview/ssh-key-details-overview.component.ts","./src/app/reseller/cloud/ssh-keys/tabs/ssh-key-edit-form/ssh-key-edit-form.component.scss","./src/app/reseller/cloud/ssh-keys/tabs/ssh-key-edit-form/ssh-key-edit-form.component.ts","./src/app/shared/fleio-api/public-key/public-key-api.service.ts","./src/app/shared/fleio-api/public-key/public-key-list.resolver.ts","./src/app/shared/fleio-api/public-key/public-key-permissions.resolver.ts","./src/app/shared/fleio-api/public-key/public-key.resolver.ts","./src/app/shared/ui-api/clipboard.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,qJ;;;;;;;;;;;ACAA,sG;;;;;;;;;;;ACAA,qJ;;;;;;;;;;;ACAA,2G;;;;;;;;;;;ACAA,oFAAoF,mBAAmB,uCAAuC,sBAAsB,8CAA8C,oBAAoB,mHAAmH,mBAAmB,0K;;;;;;;;;;;ACA5W,sSAAsS,qDAAqD,sPAAsP,2DAA2D,+yB;;;;;;;;;;;ACA5oB,+DAA+D,mM;;;;;;;;;;;;;;;;;;;;ACAF;AACiB;AAE7B;AACgB;AAOjE,IAAa,qBAAqB,GAAlC,MAAa,qBAAsB,SAAQ,gFAA4B;IAErE,YAAY,KAAqB,EAAE,mBAAwC;QACzE,KAAK,CAAC,KAAK,EAAE,mBAAmB,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;CACF;;YAHoB,8DAAc;YAAuB,4EAAmB;;AAFhE,qBAAqB;IALjC,+DAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,oMAA8C;;KAE/C,CAAC;GACW,qBAAqB,CAKjC;AALiC;;;;;;;;;;;;ACXlC,+DAA+D,uM;;;;;;;;;;;;;;;;;;;;ACAF;AAEiB;AAC7B;AACgB;AAOjE,IAAa,sBAAsB,GAAnC,MAAa,sBAAuB,SAAQ,gFAA4B;IAEtE,YAAY,KAAqB,EAAE,mBAAwC;QACzE,KAAK,CAAC,KAAK,EAAE,mBAAmB,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IACzD,CAAC;CACF;;YAHoB,8DAAc;YAAuB,4EAAmB;;AAFhE,sBAAsB;IALlC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,uMAA+C;;KAEhD,CAAC;GACW,sBAAsB,CAKlC;AALkC;;;;;;;;;;;;ACXnC,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;ACAF;AACiB;AAE7B;AACgB;AAOjE,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,gFAA4B;IAEnE,YAAY,KAAqB,EAAE,mBAAwC;QACzE,KAAK,CAAC,KAAK,EAAE,mBAAmB,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;CACF;;YAHoB,8DAAc;YAAuB,4EAAmB;;AAFhE,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,8LAA4C;;KAE7C,CAAC;GACW,mBAAmB,CAK/B;AAL+B;;;;;;;;;;;;;;;;;;;;;;;;;ACXW;AAEF;AAC6B;AAM+B;AAGP;AACK;AAC5C;AAEZ;AAK3C,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAG9B,YACU,MAAc,EAAU,MAAqB,EAC7C,oBAA0C;QAD1C,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;QAC7C,yBAAoB,GAApB,oBAAoB,CAAsB;QAElD,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED,kBAAkB,CAChB,MAA6B,EAAE,WAA8B,EAAE,KAAa;QAE1E,OAAO,IAAI,mEAAe,CACxB,MAAyB,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,oBAAoB,CACnG,CAAC;IACN,CAAC;IAED,YAAY,CAAC,UAA6C;QACxD,MAAM,SAAS,GAAe;YAC5B,MAAM,EAAE;gBACN,OAAO,EAAE;oBACP,EAAE,IAAI,EAAE,0GAAU,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE;oBACpF,EAAE,IAAI,EAAE,0GAAU,CAAC,KAAK,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,aAAa,EAAE;oBACnG,EAAE,IAAI,EAAE,0GAAU,CAAC,KAAK,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE;oBAChG,EAAE,IAAI,EAAE,0GAAU,CAAC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE;iBAChG;gBACD,WAAW,EAAE,CAAE,MAAM,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,CAAE;gBACjE,YAAY,EAAE,MAAM;aACrB;YACD,IAAI,EAAE,EAAE;SACT,CAAC;QAEF,KAAK,MAAM,SAAS,IAAI,UAAU,CAAC,OAAO,EAAE;YAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,UAAU,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;YAC9F,MAAM,GAAG,GAAc;gBACrB,KAAK,EAAE;oBACL,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,IAAI,EAAC;oBAC7B,WAAW,EAAE,EAAE,IAAI,EAAE,SAAS,CAAC,WAAW,EAAC;oBAC3C,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,EAAC;iBACnE;gBACD,IAAI,EAAE,YAAY,CAAC,OAAO,EAAE;gBAC5B,MAAM,EAAE,YAAY,CAAC,SAAS,EAAE;gBAChC,OAAO,EAAE,YAAY,CAAC,UAAU,EAAE;gBAClC,GAAG,EAAE,YAAY,CAAC,cAAc,EAAE;aACnC,CAAC;YAEF,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAC1B;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,UAAU,CAAC,UAAmD;QAC5D,OAAO;YACL,IAAI,mGAAgB,CAAC;gBACnB,IAAI,EAAE,oBAAoB;gBAC1B,OAAO,EAAE,oBAAoB;gBAC7B,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;gBACrB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,uBAAuB,CAAC;aAC5D,CAAC;SACH,CAAC;IACJ,CAAC;CACF;;YA5DmB,sDAAM;YAAkB,2EAAa;YACvB,wGAAoB;;AALzC,mBAAmB;IAH/B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,mBAAmB,CAgE/B;AAhE+B;;;;;;;;;;;;ACrBhC,+DAA+D,+L;;;;;;;;;;;;;;;;;;;;;ACAb;AACsB;AAEvB;AAC0B;AACV;AAOjE,IAAa,mBAAmB,GAAhC,MAAa,mBAAoB,SAAQ,0EAAyB;IAEhE,YACU,KAAqB,EAAU,mBAAwC,EACvE,cAA8B;QAEtC,KAAK,CAAC,KAAK,EAAE,mBAAmB,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;QAHrD,UAAK,GAAL,KAAK,CAAgB;QAAU,wBAAmB,GAAnB,mBAAmB,CAAqB;QACvE,mBAAc,GAAd,cAAc,CAAgB;IAGxC,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;CAEF;;YAVkB,8DAAc;YAA+B,4EAAmB;YACvD,6EAAc;;AAJ7B,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,8LAA4C;;KAE7C,CAAC;GACW,mBAAmB,CAa/B;AAb+B;;;;;;;;;;;;;ACRhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6F;AAEC;AACrD;AAC6B;AAE4B;AAEvD;AAC8C;AAEU;AACiB;AACrB;AAExF,MAAM,eAAgB,SAAQ,kGAAoC;IAOvE,YACE,SAA0B,EAAE,WAA8B,EAAE,KAAa,EACzE,MAAc,EAAE,MAAqB,EAAE,oBAA0C;QAEjF,KAAK,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;QACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC;IACd,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ;QACN,QAAQ,IAAI,CAAC,KAAK,EAAE;YAClB,KAAK,MAAM;gBACT,OAAO;oBACL,IAAI,EAAE,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;iBACjC,CAAC;YAEJ,KAAK,QAAQ;gBACX,OAAO;oBACL,IAAI,EAAE,oBAAoB;iBAC3B,CAAC;YAEJ,KAAK,SAAS;gBACZ,OAAO;oBACL,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBAC3B,OAAO,EAAE,eAAe,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;iBAC1E,CAAC;YAEJ;gBACE,OAAO;oBACL,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;iBAC5B,CAAC;SACL;IACH,CAAC;IAED,UAAU;QACR,MAAM,OAAO,GAAc,EAAE,CAAC;QAE9B,OAAO,CAAC,IAAI,CAAC,IAAI,mGAAgB,CAAC;YAC9B,IAAI,EAAE,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAC;YACvC,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,MAAM;YACf,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,kBAAkB,IAAI,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;YAC3E,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CACF,CAAC,CAAC;QAEH,OAAO,CAAC,IAAI,CAAC,IAAI,6FAAa,CAC5B;YACE,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC;YACtB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,QAAQ;YACjB,cAAc,EAAE;gBACd,OAAO,EAAE,IAAI;gBACb,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,2CAA2C,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;aACvE;YACD,UAAU,EAAE,IAAI,CAAC,oBAAoB;YACrC,QAAQ,EAAE,wFAAQ,CAAC,MAAM;SAC1B,CACF,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,MAAM,OAAO,GAAG,EAAE,CAAC;QAEnB,QAAQ,IAAI,CAAC,KAAK,EAAE;YAClB,KAAK,QAAQ;gBACX,OAAO,CAAC,IAAI,CAAC,IAAI,mGAAgB,CAAC;oBAC9B,IAAI,EAAE,QAAQ;oBACd,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC;oBACnD,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB,CACF,CAAC,CAAC;gBACH,OAAO,CAAC,IAAI,CAAC,IAAI,8FAAc,CAAC,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAC,CAAC,CAAC;gBAC7D,OAAO,CAAC,IAAI,CAAC,IAAI,8FAAc,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC,CAAC;gBACjD,MAAM;YACR,KAAK,MAAM;gBACT,OAAO,CAAC,IAAI,CAAC,IAAI,mGAAgB,CAAC;oBAC9B,IAAI,EAAE,QAAQ;oBACd,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC;oBACnD,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB,CACF,CAAC,CAAC;gBACH,OAAO,CAAC,IAAI,CAAC,IAAI,8FAAc,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC,CAAC;gBACjD,MAAM;YACR;gBACE,MAAM;SACT;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,kBAAkB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,aAAa;QACX,MAAM,MAAM,GAAG;YACb;gBACE,IAAI,EAAE,YAAY;gBAClB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;aACvD;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW;aAC/B;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ;aACjC;SACF,CAAC;QAEF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,OAAO;QACL,QAAQ,IAAI,CAAC,KAAK,EAAE;YAClB,KAAK,SAAS;gBACZ,OAAO;oBACL;wBACE,OAAO,EAAE,UAAU;wBACnB,SAAS,EAAE,gIAA8B;qBAC1C;iBACF,CAAC;YACJ,KAAK,QAAQ;gBACX,OAAO;oBACL;wBACE,OAAO,EAAE,QAAQ;wBACjB,SAAS,EAAE,2GAAuB;qBACnC;iBACF,CAAC;YACJ,KAAK,MAAM;gBACT,OAAO;oBACL;wBACE,OAAO,EAAE,QAAQ;wBACjB,SAAS,EAAE,2GAAuB;qBACnC;iBACF,CAAC;SACL;IACH,CAAC;IAED,WAAW;QACT,OAAO,EAAE,CAAC;IACZ,CAAC;;;;;;YA1JS,sDAAM;YAAU,2EAAa;YAAwB,wGAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5B5C;AACc;AAEqB;AACM;AACG;AACT;AAC0B;AACT;AACuB;AACxD;AAG2C;AAEvG,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wFAAmB;QAC9B,OAAO,EAAE;YACP,OAAO,EAAE,2GAAqB;SAC/B;QACD,WAAW,EAAE,CAAC,kEAAS,CAAC;QACxB,IAAI,EAAE;YACJ,MAAM,EAAE;gBACN,OAAO,EAAE,mBAAmB;gBAC5B,MAAM,EAAE;oBACN,IAAI,EAAE,IAAI;oBACV,WAAW,EAAE,qBAAqB;iBACnC;gBACD,SAAS,EAAE;oBACT,UAAU,CAAC,IAAI;wBACb,OAAO,IAAI,CAAC,MAAM,CAAC;oBACrB,CAAC;oBACD,UAAU,EAAE,SAAS;oBACrB,gBAAgB,EAAE,UAAU;iBAC7B;gBACD,QAAQ,EAAE;oBACR,OAAO,EAAE;wBACP,KAAK,EAAE,YAAY;wBACnB,OAAO,EAAE,YAAY;wBACrB,SAAS,EAAE,6GAAiB,CAAC,UAAU;qBACxC;oBACD,OAAO,EAAE;wBACP;4BACE,OAAO,EAAE,MAAM;4BACf,KAAK,EAAE,MAAM;yBACd;wBACD;4BACE,OAAO,EAAE,cAAc;4BACvB,KAAK,EAAE,YAAY;yBACpB;qBACF;iBACF;aACc;SAClB;QACD,qBAAqB,EAAE,QAAQ;KAChC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,8FAAqB;QAChC,OAAO,EAAE,EAAE;QACX,IAAI,EAAE;YACJ,MAAM,EAAE;gBACN,mBAAmB,EAAE,GAAG,EAAE;oBACxB,OAAO,gBAAgB,CAAC;gBAC1B,CAAC;aACc;SAClB;KACF;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,iGAAsB;QACjC,OAAO,EAAE;YACP,MAAM,EAAE,kGAAiB;YACzB,WAAW,EAAE,yHAA4B;SAC1C;QACD,IAAI,EAAE;YACJ,MAAM,EAAE;gBACN,mBAAmB,EAAE,CAAC,IAAI,EAAE,EAAE;oBAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBAC1B,CAAC;aACc;SAClB;KACF;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,wFAAmB;QAC9B,OAAO,EAAE;YACP,MAAM,EAAE,kGAAiB;YACzB,WAAW,EAAE,yHAA4B;SAC1C;QACD,IAAI,EAAE;YACJ,MAAM,EAAE;gBACN,mBAAmB,EAAE,CAAC,IAAI,EAAE,EAAE;oBAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBAC1B,CAAC;aACc;SAClB;KACF;CACF,CAAC;AAMF,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAChC;AADY,oBAAoB;IAJhC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,oBAAoB,CAChC;AADgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GQ;AACM;AACmC;AACG;AACT;AACA;AACX;AACmD;AACrB;AACJ;AACtC;AACmC;AAC7B;AACT;AACgB;AACT;AA4BzD,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAI;AAAjB,aAAa;IAzBzB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,8FAAqB;YACrB,iGAAsB;YACtB,wFAAmB;YACnB,wFAAmB;YACnB,gIAA8B;YAC9B,2GAAuB;SACxB;QACD,eAAe,EAAE;YACf,gIAA8B;YAC9B,2GAAuB;SACxB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,6EAAoB;YACpB,iGAAmB;YACnB,mEAAmB;YACnB,8FAAiB;YACjB,yEAAe;YACf,gEAAU;YACV,gFAAkB;YAClB,uEAAc;SACf;KACF,CAAC;GACW,aAAa,CAAI;AAAJ;;;;;;;;;;;;AC3C1B,+DAA+D,mO;;;;;;;;;;;;;;;;;;;ACAb;AACkD;AAElB;AAOlF,IAAa,8BAA8B,GAA3C,MAAa,8BAA+B,SAAQ,mGAAqC;IAEvF,YAAoB,SAA2B;QAC7C,KAAK,EAAE,CAAC;QADU,cAAS,GAAT,SAAS,CAAkB;IAE/C,CAAC;IAED,QAAQ;IACR,CAAC;CACF;;YANgC,iFAAgB;;AAFpC,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,8BAA8B;QACxC,uOAAwD;;KAEzD,CAAC;GACW,8BAA8B,CAQ1C;AAR0C;;;;;;;;;;;;ACV3C,+DAA+D,mN;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACwC;AAEjC;AAChB;AACmC;AACtC;AAGmE;AACvB;AAOlF,IAAa,uBAAuB,GAApC,MAAa,uBAAwB,SAAQ,yFAAgC;IAQ3E,YACU,WAAwB,EACxB,oBAA0C,EAC1C,MAAc,EACd,MAAqB,EACrB,SAA2B;QAEnC,KAAK,EAAE,CAAC;QANA,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,cAAS,GAAT,SAAS,CAAkB;QAZrC,eAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAE,CAAC,EAAE,CAAC;SAClB,CAAC,CAAC;IAWH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,CAAC,MAAe,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACpF,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAExC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;SACpB;IACH,CAAC;IAED,UAAU,CAAC,MAAe;QACxB,IAAI,MAAM,CAAC,IAAI,KAAK,kBAAkB,EAAE;YACtC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;gBAC5E,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;gBACxB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YACH,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;SACjB;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,cAAc,CACjB,IAAI,CAAC,oBAAoB,EACzB,KAAK,CACN,CAAC,SAAS,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,aAAa,CACvB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,CACzC,CAAC,KAAK,CAAC,GAAG,EAAE;YACb,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC;CACF;;YAtCwB,0DAAW;YACF,wGAAoB;YAClC,sDAAM;YACN,2EAAa;YACV,iFAAgB;;AAb1B,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,kNAAiD;;KAElD,CAAC;GACW,uBAAuB,CA+CnC;AA/CmC;;;;;;;;;;;;;;;;;;;;;ACjBO;AACO;AAEK;AACK;AAK5D,IAAa,oBAAoB,GAAjC,MAAa,oBAAqB,SAAQ,kEAAgC;IACxE,qCAAqC;IACrC,YAAsB,UAAsB,EAAU,MAAqB;QACzE,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QADhB,eAAU,GAAV,UAAU,CAAY;QAAU,WAAM,GAAN,MAAM,CAAe;IAE3E,CAAC;CACF;;YAHmC,+DAAU;YAAkB,oEAAa;;AAFhE,oBAAoB;IAHhC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,oBAAoB,CAKhC;AALgC;;;;;;;;;;;;;;;;;;;;;ACTU;AAIqB;AAC1B;AAEM;AAK5C,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAChC,YAAoB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;IAC9D,CAAC;IAED,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAG/D,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CACnC,KAAK,CAAC,WAA+B,CACtC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,CAAC;CACF;;YAV2C,4EAAoB;;AADnD,qBAAqB;IAHjC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,qBAAqB,CAWjC;AAXiC;;;;;;;;;;;;;;;;;;;;;ACZS;AAEL;AAE0B;AACpB;AAK5C,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IACvC,YAAoB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;IAC9D,CAAC;IAED,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAE/D,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;CACF;;YAP2C,4EAAoB;;AADnD,4BAA4B;IAHxC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,4BAA4B,CAQxC;AARwC;;;;;;;;;;;;;;;;;;;;;ACVE;AAEL;AACM;AACoB;AAMhE,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YAAoB,oBAA0C;QAA1C,yBAAoB,GAApB,oBAAoB,CAAsB;IAC9D,CAAC;IAED,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAE/D,OAAO,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,EAAE,CAAC,+CAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzF,CAAC;CACF;;YAP2C,4EAAoB;;AADnD,iBAAiB;IAH7B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,iBAAiB,CAQ7B;AAR6B;;;;;;;;;;;;;;;;;;ACVa;AAK3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAC3B;IACA,CAAC;IAEM,mBAAmB,CAAC,IAAY;QACrC,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACxD,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;QACtC,YAAY,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;QAC9B,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QAC7B,YAAY,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC;QACjC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACxC,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,YAAY,CAAC,MAAM,EAAE,CAAC;QACtB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAEM,uBAAuB,CAAC,QAA6B;QAC1D,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,QAAQ,CAAC,MAAM,EAAE,CAAC;QAClB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7B,QAAQ,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;CACF;AAzBY,gBAAgB;IAH5B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,gBAAgB,CAyB5B;AAzB4B","file":"ssh-keys-ssh-keys-module-es2015.js","sourcesContent":["module.exports = \"<app-object-details [objectController]=\\\"objectController\\\" [additionalClasses]=\\\"['fl-card-fixed-md']\\\">\\n</app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\"></app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\" [additionalClasses]=\\\"['fl-card-fixed-md']\\\">\\n</app-object-details>\\n\"","module.exports = \"<app-objects-view [objectsListController]=\\\"objectListController\\\"></app-objects-view>\\n\"","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <p class=\\\"fl-detail\\\">Created on: {{object.created_at}}</p>\\n  <p class=\\\"fl-detail\\\">User: {{object.user.username}}</p>\\n  <p class=\\\"fl-detail\\\">Fingerprint: {{object.fingerprint}}</p>\\n  <p class=\\\"fl-detail wrap-text-content\\\">Public key:\\n    <span class=\\\"fl-indent display-inline-block\\\">{{object.public_key}}</span>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"clipboard.copyTextToClipboard(object.public_key)\\\">\\n      Copy to clipboard\\n    </button>\\n  </p>\\n</div>\\n\"","module.exports = \"<form [formGroup]=\\\"sshKeyForm\\\">\\n  <app-form-errors #formErrors [formGroup]=\\\"sshKeyForm\\\"></app-form-errors>\\n  <div fxLayout=\\\"column\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" required>\\n      <mat-error>{{backendErrors['name'] || 'This field is required!' }}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <textarea matInput rows=\\\"10\\\" #publicKey\\n                placeholder=\\\"Key content\\\" type=\\\"text\\\" formControlName=\\\"public_key\\\" required>\\n      </textarea>\\n      <mat-error>{{backendErrors['public_key'] || 'This field is required!' }}</mat-error>\\n    </mat-form-field>\\n      <button *ngIf=\\\"generatedKey\\\" mat-button color=\\\"primary\\\"\\n              (click)=\\\"clipboard.copyTextAreaToClipboard(publicKey)\\\">\\n        Copy public key to clipboard\\n      </button>\\n    <ng-container *ngIf=\\\"generatedKey\\\">\\n      <mat-form-field>\\n        <p class=\\\"fl-detail\\\">Private key. You should save this key locally, it will not be saved on server.</p>\\n        <textarea matInput rows=\\\"10\\\" #privateKey\\n                  placeholder=\\\"Private key\\\" type=\\\"text\\\" formControlName=\\\"private_key\\\" readonly>\\n        </textarea>\\n      </mat-form-field>\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"clipboard.copyTextAreaToClipboard(privateKey)\\\">\\n        Copy private key to clipboard\\n      </button>\\n    </ng-container>\\n  </div>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3NzaC1rZXlzL3NzaC1rZXktY3JlYXRlL3NzaC1rZXktY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IPublicKeyModel } from '../../../../shared/fleio-api/public-key/model/public-key.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { SshKeyListUIService } from '../ssh-key-list-ui.service';\n\n@Component({\n  selector: 'app-ssh-key-create',\n  templateUrl: './ssh-key-create.component.html',\n  styleUrls: ['./ssh-key-create.component.scss']\n})\nexport class SshKeyCreateComponent extends DetailsBase<IPublicKeyModel> implements OnInit, OnDestroy {\n\n  constructor(route: ActivatedRoute, sshKeyListUIService: SshKeyListUIService) {\n    super(route, sshKeyListUIService, 'create', null);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3NzaC1rZXlzL3NzaC1rZXktZGV0YWlscy9zc2gta2V5LWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IPublicKeyModel } from '../../../../shared/fleio-api/public-key/model/public-key.model';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { ActivatedRoute } from '@angular/router';\nimport { SshKeyListUIService } from '../ssh-key-list-ui.service';\n\n@Component({\n  selector: 'app-ssh-key-details',\n  templateUrl: './ssh-key-details.component.html',\n  styleUrls: ['./ssh-key-details.component.scss']\n})\nexport class SshKeyDetailsComponent extends DetailsBase<IPublicKeyModel> implements OnInit, OnDestroy {\n\n  constructor(route: ActivatedRoute, sshKeyListUIService: SshKeyListUIService) {\n    super(route, sshKeyListUIService, 'details', 'sshKey');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3NzaC1rZXlzL3NzaC1rZXktZWRpdC9zc2gta2V5LWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IPublicKeyModel } from '../../../../shared/fleio-api/public-key/model/public-key.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { SshKeyListUIService } from '../ssh-key-list-ui.service';\n\n@Component({\n  selector: 'app-ssh-key-edit',\n  templateUrl: './ssh-key-edit.component.html',\n  styleUrls: ['./ssh-key-edit.component.scss']\n})\nexport class SshKeyEditComponent extends DetailsBase<IPublicKeyModel> implements OnInit, OnDestroy {\n\n  constructor(route: ActivatedRoute, sshKeyListUIService: SshKeyListUIService) {\n    super(route, sshKeyListUIService, 'edit', 'sshKey');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IObjectListUIService } from '../../../shared/ui/objects-view/interfaces/object-list-ui-service';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { IObjectUIService } from '../../../shared/ui/objects-view/interfaces/object-ui-service';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { ITableData } from '../../../shared/ui/objects-view/interfaces/table-data/table-data';\nimport { ColumnType } from '../../../shared/ui/objects-view/interfaces/table-data/column-definition';\nimport { ITableRow } from '../../../shared/ui/objects-view/interfaces/table-data/table-row';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { PublicKeysApiService } from '../../../shared/fleio-api/public-key/public-key-api.service';\nimport { SshKeyUiService } from './ssh-key-ui.service';\nimport { IPublicKeyModel } from '../../../shared/fleio-api/public-key/model/public-key.model';\nimport { DatePipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SshKeyListUIService implements IObjectListUIService {\n  private readonly datePipe: DatePipe;\n\n  constructor(\n    private router: Router, private config: ConfigService,\n    private publicKeysApiService: PublicKeysApiService,\n    ) {\n    this.datePipe = new DatePipe(this.config.locale);\n  }\n\n  getObjectUIService(\n    object: IBaseFleioObjectModel, permissions: IPermissionsModel, state: string\n  ): IObjectUIService {\n      return new SshKeyUiService(\n        object as IPublicKeyModel, permissions, state, this.router, this.config, this.publicKeysApiService,\n      );\n  }\n\n  getTableData(objectList: FleioObjectsList<IPublicKeyModel>): ITableData {\n    const tableData: ITableData = {\n      header: {\n        columns: [\n          { type: ColumnType.Value, displayName: 'Name', enableSort: true, fieldName: 'name' },\n          { type: ColumnType.Value, displayName: 'Fingerprint', enableSort: false, fieldName: 'fingerprint' },\n          { type: ColumnType.Value, displayName: 'Created at', enableSort: true, fieldName: 'created_at' },\n          { type: ColumnType.Actions, displayName: 'Actions', enableSort: false, fieldName: '(actions)' },\n        ],\n        columnNames: [ 'name', 'fingerprint', 'created_at', '(actions)' ],\n        statusColumn: 'name',\n      },\n      rows: [],\n    };\n\n    for (const publicKey of objectList.objects) {\n      const rowUIService = this.getObjectUIService(publicKey, objectList.permissions, 'table-view');\n      const row: ITableRow = {\n        cells: {\n          name: { text: publicKey.name},\n          fingerprint: { text: publicKey.fingerprint},\n          created_at: { text: this.datePipe.transform(publicKey.created_at)},\n        },\n        icon: rowUIService.getIcon(),\n        status: rowUIService.getStatus(),\n        actions: rowUIService.getActions(),\n        url: rowUIService.getDetailsLink(),\n      };\n\n      tableData.rows.push(row);\n    }\n\n    return tableData;\n  }\n\n  getActions(objectList: FleioObjectsList<IBaseFleioObjectModel>): IAction[] {\n    return [\n      new RouterLinkAction({\n        name: 'Create new ssh key',\n        tooltip: 'Create new ssh key',\n        icon: { name: 'add' },\n        router: this.router,\n        routerUrl: this.config.getPanelUrl('cloud/ssh-keys/create')\n      })\n    ];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3NzaC1rZXlzL3NzaC1rZXktbGlzdC9zc2gta2V5LWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ListBase } from '../../../../shared/ui/objects-view/list-base';\nimport { IPublicKeyModel } from '../../../../shared/fleio-api/public-key/model/public-key.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { RefreshService } from '../../../../shared/ui-api/refresh.service';\nimport { SshKeyListUIService } from '../ssh-key-list-ui.service';\n\n@Component({\n  selector: 'app-ssh-key-list',\n  templateUrl: './ssh-key-list.component.html',\n  styleUrls: ['./ssh-key-list.component.scss']\n})\nexport class SshKeyListComponent extends ListBase<IPublicKeyModel> implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute, private sshKeyListUIService: SshKeyListUIService,\n    private refreshService: RefreshService,\n  ) {\n    super(route, sshKeyListUIService, refreshService, 'sshKeys');\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n","import { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { IIcon } from '../../../shared/ui/common/interfaces/icon';\nimport { ITitle } from '../../../shared/ui/objects-view/interfaces/card-data/card-title';\nimport { IObjectStatus } from '../../../shared/ui/objects-view/interfaces/object-status';\nimport { ObjectUIServiceBase } from '../../../shared/ui/objects-view/object-ui-service-base';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IDataField } from '../../../shared/ui/objects-view/interfaces/card-data/data-field';\nimport { ApiCallAction, CallType } from '../../../shared/ui/objects-view/actions/api-call-action';\nimport { IDetailsTab } from '../../../shared/ui/objects-view/interfaces/details/details-tab';\nimport { DatePipe } from '@angular/common';\nimport { CallbackAction } from '../../../shared/ui/objects-view/actions/callback-action';\nimport { IPublicKeyModel } from '../../../shared/fleio-api/public-key/model/public-key.model';\nimport { PublicKeysApiService } from '../../../shared/fleio-api/public-key/public-key-api.service';\nimport { SshKeyDetailsOverviewComponent } from './tabs/ssh-key-details-overview/ssh-key-details-overview.component';\nimport { SshKeyEditFormComponent } from './tabs/ssh-key-edit-form/ssh-key-edit-form.component';\n\nexport class SshKeyUiService extends ObjectUIServiceBase<IPublicKeyModel> {\n  private readonly router: Router;\n  private readonly config: ConfigService;\n  private readonly publicKeysApiService: PublicKeysApiService;\n  private readonly datePipe: DatePipe;\n\n\n  constructor(\n    publicKey: IPublicKeyModel, permissions: IPermissionsModel, state: string,\n    router: Router, config: ConfigService, publicKeysApiService: PublicKeysApiService\n  ) {\n    super(publicKey, permissions, state);\n    this.router = router;\n    this.config = config;\n    this.publicKeysApiService = publicKeysApiService;\n    this.datePipe = new DatePipe(this.config.locale);\n  }\n\n  getIcon(): IIcon {\n    return null;\n  }\n\n  getStatus(): IObjectStatus {\n    return null;\n  }\n\n  getTitle(): ITitle {\n    switch (this.state) {\n      case 'edit':\n        return {\n          text: `Edit ${this.object.name}`,\n        };\n\n      case 'create':\n        return {\n          text: `Create new ssh key`,\n        };\n\n      case 'details':\n        return {\n          text: `${this.object.name}`,\n          subText: `Created at: ${this.datePipe.transform(this.object.created_at)}`,\n        };\n\n      default:\n        return {\n          text: `${this.object.name}`,\n        };\n    }\n  }\n\n  getActions(): IAction[] {\n    const actions: IAction[] = [];\n\n    actions.push(new RouterLinkAction({\n        icon: {name: 'edit', class: 'fl-icons'},\n        name: 'Edit',\n        tooltip: 'Edit',\n        routerUrl: this.config.getPanelUrl(`cloud/ssh-keys/${this.object.id}/edit`),\n        router: this.router,\n      }\n    ));\n\n    actions.push(new ApiCallAction(\n      {\n        object: this.object,\n        icon: {name: 'delete'},\n        name: 'Delete',\n        tooltip: 'Delete',\n        confirmOptions: {\n          confirm: true,\n          title: 'Delete ssh key',\n          message: `Are you sure you want to delete ssh key ${this.object.name}`,\n        },\n        apiService: this.publicKeysApiService,\n        callType: CallType.Delete,\n      }\n    ));\n\n    return actions;\n  }\n\n  getDetailsActions(): IAction[] {\n    const actions = [];\n\n    switch (this.state) {\n      case 'create':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`cloud/ssh-keys`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({name: 'Generate new key'}));\n        actions.push(new CallbackAction({name: 'Save'}));\n        break;\n      case 'edit':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`cloud/ssh-keys`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({name: 'Save'}));\n        break;\n      default:\n        break;\n    }\n\n    return actions;\n  }\n\n  getDetailsLink(): string {\n    return this.config.getPanelUrl(`cloud/ssh-keys/${this.object.id}`);\n  }\n\n  getCardFields(): IDataField[] {\n    const fields = [\n      {\n        name: 'Created on',\n        value: this.datePipe.transform(this.object.created_at)\n      },\n      {\n        name: 'Fingerprint',\n        value: this.object.fingerprint\n      },\n      {\n        name: 'Owner',\n        value: this.object.user.username,\n      },\n    ];\n\n    return fields;\n  }\n\n  getTabs(): IDetailsTab[] {\n    switch (this.state) {\n      case 'details':\n        return [\n          {\n            tabName: 'Overview',\n            component: SshKeyDetailsOverviewComponent,\n          },\n        ];\n      case 'create':\n        return [\n          {\n            tabName: 'Create',\n            component: SshKeyEditFormComponent,\n          },\n        ];\n      case 'edit':\n        return [\n          {\n            tabName: 'Create',\n            component: SshKeyEditFormComponent,\n          },\n        ];\n    }\n  }\n\n  getCardTags(): string[] {\n    return [];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IRouteConfig } from '../../../shared/ui-api/interfaces/route-config/route-config';\nimport { SshKeyListComponent } from './ssh-key-list/ssh-key-list.component';\nimport { SshKeyCreateComponent } from './ssh-key-create/ssh-key-create.component';\nimport { SshKeyDetailsComponent } from './ssh-key-details/ssh-key-details.component';\nimport { SshKeyEditComponent } from './ssh-key-edit/ssh-key-edit.component';\nimport { PublicKeyListResolver } from '../../../shared/fleio-api/public-key/public-key-list.resolver';\nimport { PublicKeyResolver } from '../../../shared/fleio-api/public-key/public-key.resolver';\nimport { PublicKeyPermissionsResolver } from '../../../shared/fleio-api/public-key/public-key-permissions.resolver';\nimport { AuthGuard } from '../../../shared/auth/auth.guard';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { OrderingDirection } from '../../../shared/ui-api/interfaces/route-config/ordering-directions';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SshKeyListComponent,\n    resolve: {\n      sshKeys: PublicKeyListResolver,\n    },\n    canActivate: [AuthGuard],\n    data: {\n      config: {\n        feature: 'openstack.sshkeys',\n        search: {\n          show: true,\n          placeholder: 'Search ssh keys ...',\n        },\n        subheader: {\n          objectList(data): FleioObjectsList<IBaseFleioObjectModel> {\n            return data.sshKey;\n          },\n          objectName: 'ssh key',\n          objectNamePlural: 'ssh keys',\n        },\n        ordering: {\n          default: {\n            field: 'created_at',\n            display: 'Created at',\n            direction: OrderingDirection.Descending\n          },\n          options: [\n            {\n              display: 'Name',\n              field: 'name',\n            },\n            {\n              display: 'Date created',\n              field: 'created_at',\n            }\n          ]\n        }\n      } as IRouteConfig,\n    },\n    runGuardsAndResolvers: 'always'\n  },\n  {\n    path: 'create',\n    component: SshKeyCreateComponent,\n    resolve: {},\n    data: {\n      config: {\n        getBreadCrumbDetail: () => {\n          return 'Create ssh key';\n        },\n      } as IRouteConfig,\n    }\n  },\n  {\n    path: ':id',\n    component: SshKeyDetailsComponent,\n    resolve: {\n      sshKey: PublicKeyResolver,\n      permissions: PublicKeyPermissionsResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: (data) => {\n          return data.sshKey.name;\n        },\n      } as IRouteConfig,\n    }\n  },\n  {\n    path: ':id/edit',\n    component: SshKeyEditComponent,\n    resolve: {\n      sshKey: PublicKeyResolver,\n      permissions: PublicKeyPermissionsResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: (data) => {\n          return data.sshKey.name;\n        },\n      } as IRouteConfig,\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SshKeysRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SshKeyCreateComponent } from './ssh-key-create/ssh-key-create.component';\nimport { SshKeyDetailsComponent } from './ssh-key-details/ssh-key-details.component';\nimport { SshKeyEditComponent } from './ssh-key-edit/ssh-key-edit.component';\nimport { SshKeyListComponent } from './ssh-key-list/ssh-key-list.component';\nimport { SshKeysRoutingModule } from './ssh-keys-routing.module';\nimport { SshKeyDetailsOverviewComponent } from './tabs/ssh-key-details-overview/ssh-key-details-overview.component';\nimport { SshKeyEditFormComponent } from './tabs/ssh-key-edit-form/ssh-key-edit-form.component';\nimport { ErrorHandlingModule } from '../../../shared/error-handling/error-handling.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ObjectsViewModule } from '../../../shared/ui/objects-view/objects-view.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    SshKeyCreateComponent,\n    SshKeyDetailsComponent,\n    SshKeyEditComponent,\n    SshKeyListComponent,\n    SshKeyDetailsOverviewComponent,\n    SshKeyEditFormComponent\n  ],\n  entryComponents: [\n    SshKeyDetailsOverviewComponent,\n    SshKeyEditFormComponent\n  ],\n  imports: [\n    CommonModule,\n    SshKeysRoutingModule,\n    ErrorHandlingModule,\n    ReactiveFormsModule,\n    ObjectsViewModule,\n    MatButtonModule,\n    FlexModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ]\n})\nexport class SshKeysModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3NzaC1rZXlzL3RhYnMvc3NoLWtleS1kZXRhaWxzLW92ZXJ2aWV3L3NzaC1rZXktZGV0YWlscy1vdmVydmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IPublicKeyModel } from '../../../../../shared/fleio-api/public-key/model/public-key.model';\nimport { ClipboardService } from '../../../../../shared/ui-api/clipboard.service';\n\n@Component({\n  selector: 'app-ssh-key-details-overview',\n  templateUrl: './ssh-key-details-overview.component.html',\n  styleUrls: ['./ssh-key-details-overview.component.scss']\n})\nexport class SshKeyDetailsOverviewComponent extends DetailsComponentBase<IPublicKeyModel> implements OnInit {\n\n  constructor(private clipboard: ClipboardService) {\n    super();\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3NzaC1rZXlzL3RhYnMvc3NoLWtleS1lZGl0LWZvcm0vc3NoLWtleS1lZGl0LWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsFormBase } from '../../../../../shared/ui/objects-view/details-form-base';\nimport { IPublicKeyModel } from '../../../../../shared/fleio-api/public-key/model/public-key.model';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { Observable, of } from 'rxjs';\nimport { IActionResult } from '../../../../../shared/ui/objects-view/interfaces/actions/action-result';\nimport { IAction } from '../../../../../shared/ui/objects-view/interfaces/actions/action';\nimport { PublicKeysApiService } from '../../../../../shared/fleio-api/public-key/public-key-api.service';\nimport { ClipboardService } from '../../../../../shared/ui-api/clipboard.service';\n\n@Component({\n  selector: 'app-ssh-key-edit-form',\n  templateUrl: './ssh-key-edit-form.component.html',\n  styleUrls: ['./ssh-key-edit-form.component.scss']\n})\nexport class SshKeyEditFormComponent extends DetailsFormBase<IPublicKeyModel> implements OnInit {\n  sshKeyForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    public_key: ['', Validators.required],\n    private_key: [''],\n  });\n  generatedKey: {};\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private publicKeysApiService: PublicKeysApiService,\n    private router: Router,\n    private config: ConfigService,\n    private clipboard: ClipboardService,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.objectController.actionCallback = (action: IAction) => this.keyActions(action);\n    this.sshKeyForm.patchValue(this.object);\n\n    if (!this.object.id) {\n    }\n  }\n\n  keyActions(action: IAction): Observable<IActionResult> {\n    if (action.name === 'Generate new key') {\n      this.publicKeysApiService.getAction('get_generated_key_pair').subscribe(key => {\n        this.generatedKey = key;\n        this.sshKeyForm.patchValue(key);\n      });\n      return of(null);\n    }\n    const value = this.sshKeyForm.value;\n    this.createOrUpdate(\n      this.publicKeysApiService,\n      value,\n    ).subscribe(() => {\n      this.router.navigateByUrl(\n        this.config.getPrevUrl('cloud/ssh-keys')\n      ).catch(() => {\n      });\n    });\n\n    return of(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IPublicKeyModel } from './model/public-key.model';\nimport { FleioApiService } from '../fleio-api.service';\nimport { ConfigService } from '../../config/config.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicKeysApiService extends FleioApiService<IPublicKeyModel> {\n  // noinspection JSUnusedGlobalSymbols\n  constructor(protected httpClient: HttpClient, private config: ConfigService) {\n    super(config.getPanelApiUrl('pkm'));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { FleioObjectsList } from '../fleio-objects-list';\nimport { IPublicKeyModel } from './model/public-key.model';\nimport { PublicKeysApiService } from './public-key-api.service';\nimport { Observable, of } from 'rxjs';\nimport { IListQueryParams } from '../base-model/list-query-params';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicKeyListResolver implements Resolve<FleioObjectsList<IPublicKeyModel>> {\n  constructor(private publicKeysApiService: PublicKeysApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<FleioObjectsList<IPublicKeyModel>> | Promise<FleioObjectsList<IPublicKeyModel>> |\n    FleioObjectsList<IPublicKeyModel> {\n    return this.publicKeysApiService.list(\n      route.queryParams as IListQueryParams\n    ).pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { IPermissionsModel } from '../base-model/IPermissionsModel';\nimport { PublicKeysApiService } from './public-key-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicKeyPermissionsResolver implements Resolve<IPermissionsModel> {\n  constructor(private publicKeysApiService: PublicKeysApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IPermissionsModel> | Promise<IPermissionsModel> | IPermissionsModel {\n    return this.publicKeysApiService.permissions().pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { PublicKeysApiService } from './public-key-api.service';\nimport { IPublicKeyModel } from './model/public-key.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PublicKeyResolver implements Resolve<IPublicKeyModel> {\n  constructor(private publicKeysApiService: PublicKeysApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IPublicKeyModel> | Promise<IPublicKeyModel> | IPublicKeyModel {\n    return this.publicKeysApiService.get(route.params.id).pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClipboardService {\n  constructor() {\n  }\n\n  public copyTextToClipboard(text: string) {\n    const tempTextArea = document.createElement('textarea');\n    tempTextArea.style.position = 'fixed';\n    tempTextArea.style.left = '0';\n    tempTextArea.style.top = '0';\n    tempTextArea.style.opacity = '0';\n    tempTextArea.value = text;\n    document.body.appendChild(tempTextArea);\n    tempTextArea.focus();\n    tempTextArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempTextArea);\n  }\n\n  public copyTextAreaToClipboard(textArea: HTMLTextAreaElement) {\n    textArea.focus();\n    textArea.select();\n    document.execCommand('copy');\n    textArea.setSelectionRange(0, 0);\n    document.body.removeChild(textArea);\n  }\n}\n"],"sourceRoot":""}