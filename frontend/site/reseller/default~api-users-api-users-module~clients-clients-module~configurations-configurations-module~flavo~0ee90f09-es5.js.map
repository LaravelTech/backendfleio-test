{"version":3,"sources":["./src/app/shared/ui/objects-view/actions/base-action.ts","./src/app/shared/ui/objects-view/actions/callback-action.ts","./src/app/shared/ui/objects-view/actions/router-link-action.ts","./src/app/shared/ui/objects-view/details-base.ts","./src/app/shared/ui/objects-view/details-component-base.ts","./src/app/shared/ui/objects-view/details-form-base.ts","./src/app/shared/ui/objects-view/object-controller.ts","./src/app/shared/ui/objects-view/object-ui-service-base.ts"],"names":[],"mappings":"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","file":"default~api-users-api-users-module~clients-clients-module~configurations-configurations-module~flavo~0ee90f09-es5.js","sourcesContent":["import { IBaseFleioObjectModel } from '../../../fleio-api/base-model/base-fleio-object.model';\nimport { Observable, of } from 'rxjs';\nimport { IAction } from '../interfaces/actions/action';\nimport { IIcon } from '../../common/interfaces/icon';\nimport { delay } from 'rxjs/operators';\nimport { NotificationService } from '../../../ui-api/notification.service';\nimport { IActionResult } from '../interfaces/actions/action-result';\nimport { IActionExecutionOptions } from '../interfaces/actions/action-options';\nimport { IActionConfirmOptions } from '../interfaces/actions/action-confirm-options';\nimport { RefreshService } from '../../../ui-api/refresh.service';\n\nexport class BaseAction implements IAction {\n  object: IBaseFleioObjectModel;\n  icon: IIcon;\n  name: string;\n  tooltip: string;\n\n  options?: IActionExecutionOptions;\n  confirmOptions?: IActionConfirmOptions;\n\n  isRunning: boolean;\n  noPermissions: boolean;\n  refreshAfterExecute = true;\n  redirectAfterExecute = false;\n  redirectUrl: string;\n\n  notificationService: NotificationService;\n\n  constructor(init?: Partial<BaseAction>) {\n    Object.assign(this, init);\n    if (this.noPermissions && !this.tooltip) {\n      this.tooltip = 'You don\\'t have permissions to perform this action';\n    }\n  }\n\n  executeImpl(): Observable<IActionResult> {\n    console.warn('Base object action executeImpl method invoked, ' +\n      'override this in your derived classes.');\n    return of({message: 'Base object action execute method invoked.'}).pipe(delay(1000));\n  }\n\n  getActiveOptions(executionOptions: IActionExecutionOptions): IActionExecutionOptions {\n    const activeOptions: IActionExecutionOptions = {\n      displayConfirmation: true,\n      displayMessages: true,\n    };\n\n    if (this.options) {\n      activeOptions.displayConfirmation =\n        activeOptions.displayConfirmation && this.options.displayConfirmation;\n      activeOptions.displayMessages = activeOptions.displayMessages && this.options.displayMessages;\n    }\n    if (executionOptions) {\n      activeOptions.displayConfirmation =\n        activeOptions.displayConfirmation && executionOptions.displayConfirmation;\n      activeOptions.displayMessages = activeOptions.displayMessages && executionOptions.displayMessages;\n    }\n\n    return activeOptions;\n  }\n\n  execute(\n    notificationService: NotificationService, refreshService: RefreshService, options?: IActionExecutionOptions\n  ) {\n    this.isRunning = true;\n    this.notificationService = notificationService;\n    const activeOptions = this.getActiveOptions(options);\n    let dialogResult$: Observable<string> = of('yes');\n    if (this.confirmOptions && this.confirmOptions.confirm && activeOptions.displayConfirmation) {\n      dialogResult$ = notificationService.confirmDialog({\n        title: this.confirmOptions.title,\n        message: this.confirmOptions.message,\n      });\n    }\n    dialogResult$.subscribe(dialogResult => {\n      if (dialogResult === 'yes') {\n        this.executeImpl().subscribe(result => {\n          this.isRunning = false;\n          if (activeOptions.displayMessages && result) {\n            notificationService.showMessage(result.message);\n          }\n          if (this.refreshAfterExecute) {\n            refreshService.refresh();\n          }\n          if (this.redirectAfterExecute) {\n            refreshService.redirect(this.redirectUrl);\n          }\n        });\n      } else {\n        this.isRunning = false;\n      }\n    });\n  }\n}\n","import { BaseAction } from './base-action';\nimport { Observable, of } from 'rxjs';\nimport { IActionResult } from '../interfaces/actions/action-result';\n\nexport class CallbackAction extends BaseAction {\n  callback?: (action: CallbackAction) => Observable<IActionResult>;\n\n  constructor(init: Partial<CallbackAction>) {\n    super(init);\n    if (!this.options) {\n      this.options = {displayConfirmation: false, displayMessages: false };\n    }\n    this.refreshAfterExecute = init ? !!init.refreshAfterExecute : false;\n  }\n\n  executeImpl(): Observable<IActionResult> {\n    if (this.callback) {\n      return this.callback(this);\n    }\n\n    return of(null);\n  }\n}\n","import { BaseAction } from './base-action';\nimport { from, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { IActionResult } from '../interfaces/actions/action-result';\n\nexport class RouterLinkAction extends BaseAction {\n  routerUrl: string;\n  router: Router;\n\n  constructor(init?: Partial<RouterLinkAction>) {\n    super(init);\n    if (!this.options) {\n      this.options = {displayConfirmation: false, displayMessages: false };\n    }\n    this.refreshAfterExecute = false;\n  }\n\n  executeImpl(): Observable<IActionResult> {\n    return from(this.router.navigateByUrl(this.routerUrl)).pipe(map(result => {\n      return {message: 'Navigated successfully'};\n    }));\n  }\n}\n","import { ObjectController } from './object-controller';\nimport { map } from 'rxjs/operators';\nimport { IBaseFleioObjectModel } from '../../fleio-api/base-model/base-fleio-object.model';\nimport { IPermissionsModel } from '../../fleio-api/base-model/IPermissionsModel';\nimport { OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IObjectListUIService } from './interfaces/object-list-ui-service';\n\nexport class DetailsBase<ObjectType extends IBaseFleioObjectModel> implements OnDestroy, OnInit {\n  protected objectController: ObjectController;\n  protected state: string;\n  protected objectName: string;\n  protected route: ActivatedRoute;\n  protected objectListUIService: IObjectListUIService;\n  protected additionalObjectNames: string[];\n\n  protected get object(): ObjectType {\n    return this.objectController.object as ObjectType;\n  }\n\n  constructor(\n    route: ActivatedRoute, objectListUIService: IObjectListUIService,\n    state: string, objectName: string, additionalObjectNames: string[] | null = null) {\n    this.route = route;\n    this.objectListUIService = objectListUIService;\n    this.state = state;\n    this.objectName = objectName;\n    this.additionalObjectNames = additionalObjectNames;\n  }\n\n  ngOnInit() {\n    this.objectController = new ObjectController(\n      this.route.data.pipe(\n        map((data) => {\n          let object: IBaseFleioObjectModel;\n          let additionalObjects: {[objectName: string]: IBaseFleioObjectModel};\n          if (this.objectName) {\n            object = data[this.objectName];\n            if (!object) {\n              console.error(`No object named ${this.objectName} found in router data`);\n            }\n\n            if (this.additionalObjectNames) {\n              additionalObjects = {};\n              for (const additionalObjectName of this.additionalObjectNames) {\n                const additionalObject = data[additionalObjectName];\n                if (!additionalObject) {\n                  console.error(`No additional object named ${additionalObjectName} found in router data`);\n                  console.error(data);\n                } else {\n                  additionalObjects[additionalObjectName] = data[additionalObjectName];\n                }\n              }\n            }\n\n          } else {\n            object = {};\n          }\n          return {\n            object,\n            additionalObjects,\n            permissions: data.permissions as IPermissionsModel,\n          };\n        })\n      ),\n      this.objectListUIService, this.state,\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.objectController) {\n      this.objectController.unsubscribe();\n      this.objectController = null;\n    }\n  }\n}\n","import { IObjectController } from './interfaces/object-controller';\nimport { Input, OnDestroy } from '@angular/core';\nimport { IBaseFleioObjectModel } from '../../fleio-api/base-model/base-fleio-object.model';\nimport { DEFAULT_BOOST_INTERVALS, RefreshTimer } from '../../ui-api/helpers/refresh-timer';\n\nexport class DetailsComponentBase<ObjectType extends IBaseFleioObjectModel> implements OnDestroy {\n  @Input() objectController: IObjectController;\n  @Input() componentTabIndex: number;\n\n  protected tabActive = false;\n  protected refreshTimer: RefreshTimer;\n\n  ngOnDestroy(): void {\n    if (this.refreshTimer) {\n      this.refreshTimer.stop();\n      delete this.refreshTimer;\n    }\n  }\n\n  protected get object(): ObjectType {\n    return this.objectController.object as ObjectType;\n  }\n\n  protected initTabEvents() {\n    this.objectController.currentTabIndex$.subscribe(tabIndex => {\n      if (tabIndex === this.componentTabIndex) {\n        if (!this.tabActive) {\n          this.tabActive = true;\n          this.tabActivated();\n        }\n      } else {\n        if (this.tabActive) {\n          this.tabActive = false;\n          this.tabDeactivated();\n        }\n      }\n    });\n  }\n\n  protected setupRefreshTimer(interval: number) {\n    this.initTabEvents();\n    this.refreshTimer = new RefreshTimer(interval, () => {\n      this.refreshData();\n    }, false);\n  }\n\n  protected boostRefreshTimer(boostIntervals: number[] = DEFAULT_BOOST_INTERVALS) {\n    if (!this.refreshTimer) {\n      console.error('refresh timer is not initialized');\n      return;\n    }\n\n    this.refreshTimer.boost(boostIntervals);\n  }\n\n  protected tabActivated() {\n    if (this.refreshTimer) {\n      this.refreshData();\n      this.refreshTimer.start();\n    }\n  }\n\n  protected tabDeactivated() {\n    if (this.refreshTimer) {\n      this.refreshTimer.stop();\n    }\n  }\n\n  protected refreshData() {\n  }\n}\n","import { DetailsComponentBase } from './details-component-base';\nimport { IBaseFleioObjectModel } from '../../fleio-api/base-model/base-fleio-object.model';\nimport { ViewChild } from '@angular/core';\nimport { FleioApiService } from '../../fleio-api/fleio-api.service';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { HttpEvent } from '@angular/common/http';\n\nexport class DetailsFormBase<ObjectType extends IBaseFleioObjectModel> extends DetailsComponentBase<ObjectType> {\n  @ViewChild('formErrors', {static: false}) protected formErrors;\n  protected backendErrors: any = {};\n  protected formGroup: FormGroup;\n\n  protected validate() {\n    if (!this.formErrors) {\n      console.error('You should declare form errors in your form');\n    } else {\n      if (!this.formGroup) {\n        this.formGroup = this.formErrors.formGroup;\n      }\n    }\n  }\n\n  protected setErrors(backendErrors: {}) {\n    this.validate();\n    this.backendErrors = backendErrors;\n    this.formErrors.setBackendErrors(backendErrors);\n  }\n\n  protected createOrUpdate(\n    api: FleioApiService<ObjectType>,\n    value: ObjectType | FormData,\n    raise: boolean = false,\n  ): Observable<ObjectType | HttpEvent<ObjectType>> {\n    this.validate();\n    if (this.formGroup.invalid) {\n      Object.keys(this.formGroup.controls).map(name => {\n        const control = this.formGroup.controls[name];\n        if (control.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return EMPTY;\n    }\n\n    let request;\n    if (this.object.id) {\n      if (value instanceof FormData) {\n        throw new Error('Form data not supported on update');\n      }\n      value.id = this.object.id;\n      request = api.update(value.id, value);\n    } else {\n      if (value instanceof FormData) {\n        request = api.createWithUpload(value);\n      } else {\n        request = api.create(value);\n      }\n    }\n\n    return request.pipe(catchError((error) => {\n      if (error.error) {\n        this.setErrors(error.error);\n        if (raise) {\n          throw error;\n        } else {\n          return EMPTY;\n        }\n      } else {\n        throw error;\n      }\n    }));\n  }\n}\n","import { IObjectController } from './interfaces/object-controller';\nimport { IBaseFleioObjectModel } from '../../fleio-api/base-model/base-fleio-object.model';\nimport { IPermissionsModel } from '../../fleio-api/base-model/IPermissionsModel';\nimport { ISummaryCardData } from './interfaces/card-data/summary-card-data';\nimport { IDetailsData } from './interfaces/details/details-data';\nimport { IObjectUIService } from './interfaces/object-ui-service';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { IObjectListUIService } from './interfaces/object-list-ui-service';\nimport { CallbackAction } from './actions/callback-action';\nimport { IAction } from './interfaces/actions/action';\nimport { IActionResult } from './interfaces/actions/action-result';\n\nexport class ObjectController implements IObjectController {\n  object: IBaseFleioObjectModel;\n  additionalObjects?: {[objectName: string]: IBaseFleioObjectModel};\n  private permissions: IPermissionsModel;\n  private dataSubscription: Subscription;\n\n  private objectUIService: IObjectUIService;\n  private readonly state: string;\n\n  public currentTabIndex = new BehaviorSubject<number>(0);\n  public currentTabIndex$ = this.currentTabIndex.asObservable();\n\n  actionCallback: (action: CallbackAction) => Observable<IActionResult> = null;\n\n  constructor(\n    objectData: Observable<{\n      object: IBaseFleioObjectModel;\n      additionalObjects?: {[objectName: string]: IBaseFleioObjectModel};\n      permissions?: IPermissionsModel;\n    }>,\n    objectListUIService: IObjectListUIService, state: string,\n    ) {\n    this.state = state;\n    this.dataSubscription = objectData.subscribe((data) => {\n      this.object = data.object;\n      this.additionalObjects = data.additionalObjects;\n      this.permissions = data.permissions;\n      this.objectUIService = objectListUIService.getObjectUIService(this.object, this.permissions, state);\n    });\n  }\n\n  unsubscribe() {\n    if (this.dataSubscription) {\n      this.dataSubscription.unsubscribe();\n      this.dataSubscription = null;\n    }\n  }\n\n  setActionCallback(actions: IAction[]): IAction[] {\n    for (const action of actions) {\n      if (action instanceof CallbackAction && !action.callback) {\n        (action as CallbackAction).callback = (callbackAction) => {\n          if (this.actionCallback) {\n            return this.actionCallback(callbackAction);\n          }\n\n          return of(null);\n        };\n      }\n    }\n\n    return actions;\n  }\n\n  getObjectActions(): IAction[] {\n    if (['card-view', 'list-view', 'details'].indexOf(this.state) === -1) {\n      return [];\n    }\n\n    return this.objectUIService.getActions();\n  }\n\n  getSummaryCardData(): ISummaryCardData {\n    const detailsLink = this.objectUIService.getDetailsLink();\n\n    return {\n      header: {\n        title: this.objectUIService.getTitle(),\n        icon: this.objectUIService.getIcon(),\n        status: this.objectUIService.getStatus(),\n        tags: this.objectUIService.getCardTags(),\n      },\n      detailsLink: {\n        enabled: !!detailsLink,\n        url: detailsLink,\n      },\n      fields: this.objectUIService.getCardFields(),\n      actions: this.setActionCallback(this.getObjectActions()),\n    };\n  }\n\n  getDetailsCardData(): IDetailsData {\n    return {\n      header: {\n        title: this.objectUIService.getTitle(),\n        icon: this.objectUIService.getIcon(),\n        status: this.objectUIService.getStatus(),\n        tags: this.objectUIService.getCardTags(),\n      },\n      actions: this.setActionCallback(this.getObjectActions()),\n      tabs: this.objectUIService.getTabs(),\n      detailsActions: this.setActionCallback(this.objectUIService.getDetailsActions()),\n    };\n  }\n}\n","import { IBaseFleioObjectModel } from '../../fleio-api/base-model/base-fleio-object.model';\nimport { IObjectUIService } from './interfaces/object-ui-service';\nimport { IPermissionsModel } from '../../fleio-api/base-model/IPermissionsModel';\nimport { IIcon } from '../common/interfaces/icon';\nimport { IObjectStatus } from './interfaces/object-status';\nimport { ITitle } from './interfaces/card-data/card-title';\nimport { IAction } from './interfaces/actions/action';\nimport { IDataField } from './interfaces/card-data/data-field';\nimport { IDetailsTab } from './interfaces/details/details-tab';\n\nexport abstract class ObjectUIServiceBase<ObjectModel extends IBaseFleioObjectModel> implements IObjectUIService {\n  protected permissions: IPermissionsModel;\n  protected state: string;\n\n  public object: ObjectModel;\n\n  protected constructor(object: ObjectModel, permissions: IPermissionsModel, state: string) {\n    this.state = state;\n    this.setData(object, permissions);\n  }\n\n  setData(object: ObjectModel, permissions: IPermissionsModel) {\n    this.object = object;\n    this.permissions = permissions;\n  }\n\n  getIcon(): IIcon {\n    console.warn('getIcon must be implemented in derived classes');\n    return null;\n  }\n\n  getStatus(): IObjectStatus {\n    console.warn('getStatus must be implemented in derived classes');\n    return null;\n  }\n\n  getTitle(): ITitle {\n    console.warn('getTitle must be implemented in derived classes');\n    return null;\n  }\n\n  getActions(): IAction[] {\n    console.warn('getActions must be implemented in derived classes');\n    return [];\n  }\n\n  getDetailsLink(): string {\n    console.warn('getDetailsLink must be implemented in derived classes');\n    return null;\n  }\n\n  getCardFields(): IDataField[] {\n    console.warn('getCardFields must be implemented in derived classes');\n    return [];\n  }\n\n  getCardTags(): string[] {\n    console.warn('getCardTags must be implemented in derived classes');\n    return [];\n  }\n\n  getTabs(): IDetailsTab[] {\n    console.warn('getTabs must be implemented in derived classes');\n    return [];\n  }\n\n  getDetailsActions(): IAction[] {\n    console.warn('getDetailsActions must be implemented in derived classes');\n    return [];\n  }\n}\n"],"sourceRoot":""}