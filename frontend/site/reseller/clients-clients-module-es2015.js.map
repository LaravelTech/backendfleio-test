{"version":3,"sources":["./src/app/reseller/clients-users/clients/client-create/client-create.component.html","./src/app/reseller/clients-users/clients/client-details/client-details.component.html","./src/app/reseller/clients-users/clients/client-edit/client-edit.component.html","./src/app/reseller/clients-users/clients/client-list/client-list.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-billing/client-details-billing.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-configurations/client-details-configurations.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-configurations/dialogs/change-configuration-dialog/change-configuration-dialog.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-invoices/client-details-invoices.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-journal/client-details-journal.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/client-details-openstack-service.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/dialogs/change-pricing-plan-dialog/change-pricing-plan-dialog.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/dialogs/create-openstack-service-dialog/create-openstack-service-dialog.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-overview/client-details-overview.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-services/client-details-services.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-users/client-details-users.component.html","./src/app/reseller/clients-users/clients/tabs/client-details-users/dialogs/associate-user-dialog/associate-user-dialog.component.html","./src/app/reseller/clients-users/clients/tabs/client-edit-form/client-edit-form.component.html","./src/app/reseller/clients-users/clients/client-create/client-create.component.scss","./src/app/reseller/clients-users/clients/client-create/client-create.component.ts","./src/app/reseller/clients-users/clients/client-details/client-details.component.scss","./src/app/reseller/clients-users/clients/client-details/client-details.component.ts","./src/app/reseller/clients-users/clients/client-edit/client-edit.component.scss","./src/app/reseller/clients-users/clients/client-edit/client-edit.component.ts","./src/app/reseller/clients-users/clients/client-list-ui.service.ts","./src/app/reseller/clients-users/clients/client-list/client-list.component.scss","./src/app/reseller/clients-users/clients/client-list/client-list.component.ts","./src/app/reseller/clients-users/clients/client-ui.service.ts","./src/app/reseller/clients-users/clients/clients-routing.module.ts","./src/app/reseller/clients-users/clients/clients.module.ts","./src/app/reseller/clients-users/clients/tabs/client-details-billing/client-details-billing.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-billing/client-details-billing.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-configurations/client-details-configurations.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-configurations/client-details-configurations.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-configurations/dialogs/change-configuration-dialog/change-configuration-dialog.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-configurations/dialogs/change-configuration-dialog/change-configuration-dialog.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-invoices/client-details-invoices.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-invoices/client-details-invoices.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-journal/client-details-journal.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-journal/client-details-journal.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/client-details-openstack-service.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/client-details-openstack-service.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/dialogs/change-pricing-plan-dialog/change-pricing-plan-dialog.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/dialogs/change-pricing-plan-dialog/change-pricing-plan-dialog.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/dialogs/create-openstack-service-dialog/create-openstack-service-dialog.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-openstack-service/dialogs/create-openstack-service-dialog/create-openstack-service-dialog.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-overview/client-details-overview.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-overview/client-details-overview.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-services/client-details-services.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-services/client-details-services.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-users/client-details-users.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-users/client-details-users.component.ts","./src/app/reseller/clients-users/clients/tabs/client-details-users/dialogs/associate-user-dialog/associate-user-dialog.component.scss","./src/app/reseller/clients-users/clients/tabs/client-details-users/dialogs/associate-user-dialog/associate-user-dialog.component.ts","./src/app/reseller/clients-users/clients/tabs/client-edit-form/client-edit-form.component.scss","./src/app/reseller/clients-users/clients/tabs/client-edit-form/client-edit-form.component.ts","./src/app/shared/fleio-api/billing/journal/journal-api.service.ts","./src/app/shared/fleio-api/client-user/client/client-create-options.resolver.ts","./src/app/shared/fleio-api/client-user/client/client-list.resolver.ts","./src/app/shared/fleio-api/client-user/client/client.resolver.ts","./src/app/shared/fleio-api/cloud/clients/cloud-clients-api.service.ts"],"names":[],"mappings":"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","file":"clients-clients-module-es2015.js","sourcesContent":["module.exports = \"<app-object-details [objectController]=\\\"objectController\\\"\\n                    [additionalClasses]=\\\"['fl-card-fixed-md']\\\">\\n</app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\"></app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\" [additionalClasses]=\\\"['fl-card-fixed-md']\\\"></app-object-details>\\n\"","module.exports = \"<app-objects-view [objectsListController]=\\\"objectListController\\\"></app-objects-view>\\n\"","module.exports = \"<app-fleio-service-dynamic-usage [dynamicUsage]=\\\"dynamicUsage\\\" [dynamicUsageCost]=\\\"dynamicUsageCost\\\">\\n</app-fleio-service-dynamic-usage>\\n\"","module.exports = \"<div class=\\\"fl-content fl-content-min-height\\\">\\n  <app-fl-backdrop *ngIf=\\\"!configuration\\\"></app-fl-backdrop>\\n  <div *ngIf=\\\"configuration\\\" fxLayout=\\\"column\\\">\\n    <p>Configuration:&nbsp;\\n      <a class=\\\"active-link\\\"\\n         [routerLink]=\\\"[config.getPanelUrl('settings/configurations'), configuration.id]\\\">\\n        {{configuration.name}}\\n      </a>\\n    </p>\\n    <div fxLayout=\\\"row\\\">\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"changeConfiguration()\\\">\\n        CHANGE CONFIGURATION\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Change client {{data.client.name}} configuration</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <p>Current configuration: {{data.configuration.name}}</p>\\n  <div [formGroup]=\\\"changeConfigurationFrom\\\">\\n    <mat-form-field>\\n      <mat-select formControlName=\\\"selectedConfiguration\\\" placeholder=\\\"New configuration\\\">\\n        <mat-option *ngFor=\\\"let configuration of availableConfigurations\\\" [value]=\\\"configuration.id\\\">\\n          {{configuration.name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n  <button mat-button disabled=\\\"{{!(selectedConfiguration.value > 0)}}\\\" (click)=\\\"changeConfiguration()\\\"\\n          [color]=\\\"'primary'\\\">\\n    Change configuration\\n  </button>\\n</div>\\n\"","module.exports = \"<div class=\\\"fl-content fl-content-min-height\\\">\\n  <app-fl-backdrop *ngIf=\\\"!invoices\\\"></app-fl-backdrop>\\n  <div *ngIf=\\\"invoices\\\" fxLayout=\\\"column\\\">\\n    <table class=\\\"full-width\\\" mat-table [dataSource]=\\\"invoices\\\">\\n      <ng-container matColumnDef=\\\"id\\\">\\n        <th mat-header-cell *matHeaderCellDef>Invoice id</th>\\n        <td mat-cell *matCellDef=\\\"let invoice\\\">\\n          <a [routerLink]=\\\"[config.getPanelUrl('billing/invoices'), invoice.id]\\\">\\n            {{invoice.id}}\\n          </a>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef>Status</th>\\n        <td mat-cell *matCellDef=\\\"let invoice\\\">\\n          <a [routerLink]=\\\"[config.getPanelUrl('billing/invoices'), invoice.id]\\\">\\n            {{invoice.status | uppercase}}\\n          </a>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"issue_date\\\">\\n        <th mat-header-cell *matHeaderCellDef>Status</th>\\n        <td mat-cell *matCellDef=\\\"let invoice\\\">\\n          <a [routerLink]=\\\"[config.getPanelUrl('billing/invoices'), invoice.id]\\\">\\n            {{invoice.issue_date | date}}\\n          </a>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"total\\\">\\n        <th mat-header-cell *matHeaderCellDef>Total</th>\\n        <td mat-cell *matCellDef=\\\"let invoice\\\">\\n          <a [routerLink]=\\\"[config.getPanelUrl('billing/invoices'), invoice.id]\\\">\\n            {{invoice.total}} {{invoice.currency}}\\n          </a>\\n        </td>\\n      </ng-container>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n    <div fxLayout=\\\"row\\\">\\n      <button mat-button color=\\\"primary\\\" class=\\\"fl-margin-top\\\"\\n              [routerLink]=\\\"config.getPanelUrl('billing/invoices/create')\\\"\\n              [queryParams]=\\\"{client_id: object.id}\\\">\\n        CREATE INVOICE\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"fl-content fl-content-min-height\\\">\\n  <app-fl-backdrop *ngIf=\\\"!journalEntries\\\"></app-fl-backdrop>\\n  <div *ngIf=\\\"journalEntries\\\" fxLayout=\\\"column\\\">\\n    <table class=\\\"full-width\\\" mat-table [dataSource]=\\\"journalEntries\\\">\\n      <ng-container matColumnDef=\\\"date\\\">\\n        <th mat-header-cell *matHeaderCellDef>Entry date</th>\\n        <td mat-cell *matCellDef=\\\"let journalEntry\\\">{{journalEntry.date_added | date}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"source\\\">\\n        <th mat-header-cell *matHeaderCellDef>Source</th>\\n        <td mat-cell *matCellDef=\\\"let journalEntry\\\">{{journalEntry.source_info.name}}</td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"destination\\\">\\n        <th mat-header-cell *matHeaderCellDef>Destination</th>\\n        <td mat-cell *matCellDef=\\\"let journalEntry\\\">\\n          {{journalEntry.destination_info.name}}\\n          <span *ngIf=\\\"journalEntry.destination_info.invoice\\\">\\n            <a [routerLink]=\\\"[config.getPanelUrl('billing/invoices'), journalEntry.destination_info.invoice]\\\">\\n              Invoice {{journalEntry.destination_info.invoice}}\\n            </a>\\n          </span>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"amount\\\">\\n        <th mat-header-cell *matHeaderCellDef>Amount</th>\\n        <td mat-cell *matCellDef=\\\"let journalEntry\\\">\\n          {{journalEntry.destination_amount}} {{journalEntry.destination_currency}}\\n        </td>\\n      </ng-container>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"fl-content fl-content-min-height\\\">\\n  <app-fl-backdrop *ngIf=\\\"!openstackServices\\\"></app-fl-backdrop>\\n  <div *ngIf=\\\"openstackServices\\\" fxLayout=\\\"column\\\">\\n    <div *ngFor=\\\"let service of openstackServices\\\" class=\\\"fl-margin-bottom\\\">\\n      <p class=\\\"fl-detail\\\">Service status: {{service.status}}</p>\\n      <p class=\\\"fl-detail\\\">Product name: {{service.product.name}}</p>\\n      <p class=\\\"fl-detail\\\">Product cycle: {{service.cycle.display_name}}</p>\\n      <p class=\\\"fl-detail\\\">Pricing plan: {{service.pricing_plan.name}}</p>\\n      <p class=\\\"fl-detail\\\">Service:&nbsp;\\n        <a class=\\\"active-link\\\"\\n           [routerLink]=\\\"[config.getPanelUrl('billing/services'), service.id]\\\">\\n          {{service.id}}\\n        </a>\\n      </p>\\n      <div *ngIf=\\\"service.status === 'active'\\\">\\n        <p class=\\\"fl-detail\\\">Project ID: {{openstackProjects[service.id].id}}</p>\\n        <p class=\\\"fl-detail\\\">Project domain ID: {{openstackProjects[service.id].project_domain_id}}</p>\\n      </div>\\n      <div *ngIf=\\\"service.status === 'active'\\\" fxLayout=\\\"row\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"changePricingPlan(service)\\\">\\n          Change pricing plan\\n        </button>\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"terminateService(service)\\\">\\n          Terminate service\\n        </button>\\n      </div>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"createOpenstackService()\\\">\\n        Create openstack service\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Change service pricing plan</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <p>Current plan: {{currentPlan.name}}</p>\\n  <div [formGroup]=\\\"changePlanFrom\\\">\\n    <mat-form-field>\\n      <mat-select formControlName=\\\"selectedPlan\\\" placeholder=\\\"New plan\\\">\\n        <mat-option *ngFor=\\\"let plan of availablePlans\\\" [value]=\\\"plan.id\\\">\\n          {{plan.name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n  <button mat-button disabled=\\\"{{!(selectedPlan.value > 0)}}\\\" (click)=\\\"changePlan()\\\"\\n          [color]=\\\"'primary'\\\">\\n    Change plan\\n  </button>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Change service pricing plan</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <div [formGroup]=\\\"createOpenstackServiceForm\\\" fxLayout=\\\"column\\\">\\n    <mat-form-field>\\n      <mat-select formControlName=\\\"product_id\\\" placeholder=\\\"Product\\\">\\n        <mat-option *ngFor=\\\"let product of availableProducts\\\" [value]=\\\"product.id\\\">\\n          {{product.name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select formControlName=\\\"product_cycle_id\\\" placeholder=\\\"Product cycle\\\">\\n        <mat-option\\n          *ngFor=\\\"let productCycle of selectedProductCycles\\\"\\n          [value]=\\\"productCycle.id\\\">\\n          {{productCycle.display_name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-checkbox formControlName=\\\"create_new_project\\\" color=\\\"primary\\\">\\n      Create new project\\n    </mat-checkbox>\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Project\\\" type=\\\"text\\\" formControlName=\\\"project_id\\\" required\\n             [matAutocomplete]=\\\"autocompleteProject\\\">\\n      <mat-autocomplete #autocompleteProject=\\\"matAutocomplete\\\" [displayWith]=\\\"projectDisplay\\\">\\n        <mat-option *ngFor=\\\"let project of filteredProjects$ | async\\\" [value]=\\\"project\\\">\\n          {{project.name}}\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n  <button mat-button [disabled]=\\\"!createOpenstackServiceForm.valid\\\" (click)=\\\"createOpenstackService()\\\"\\n          [color]=\\\"'primary'\\\">\\n    Create Openstack service\\n  </button>\\n</div>\\n\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" class=\\\"full-width\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n    <p class=\\\"fl-detail\\\">Company:&nbsp;{{ object.company }}</p>\\n    <p class=\\\"fl-detail\\\">Email:&nbsp;{{ object.email }}</p>\\n    <p class=\\\"fl-detail\\\">Country:&nbsp;{{ object.country_name }}</p>\\n    <p class=\\\"fl-detail\\\">City:&nbsp;{{ object.city }}\\n      <span ng-if=\\\"client.state\\\">, {{ object.state }}</span>\\n    </p>\\n    <p class=\\\"fl-detail\\\">Address:&nbsp;{{ object.address1 }}</p>\\n    <p class=\\\"fl-detail\\\" ng-if=\\\"object.address2\\\">{{ object.address2 }}</p>\\n    <p class=\\\"fl-detail\\\">Zip code:&nbsp;{{ object.zip_code }}</p>\\n    <p class=\\\"fl-detail\\\">Phone:&nbsp;{{ object.phone }}</p>\\n    <p class=\\\"fl-detail\\\">ID:&nbsp;{{ object.id }}</p>\\n    <p class=\\\"fl-detail\\\">Created on:&nbsp;{{ object.date_created | date:'mediumDate' }} </p>\\n  </div>\\n</div>\\n\"","module.exports = \"<p>client-details-services works!</p>\\n\"","module.exports = \"<div class=\\\"fl-content fl-content-min-height\\\">\\n  <app-fl-backdrop *ngIf=\\\"!users\\\"></app-fl-backdrop>\\n  <div *ngIf=\\\"users\\\" fxLayout=\\\"column\\\">\\n    <table class=\\\"full-width\\\" mat-table [dataSource]=\\\"users\\\">\\n      <ng-container matColumnDef=\\\"username\\\">\\n        <th mat-header-cell *matHeaderCellDef>Username</th>\\n        <td mat-cell *matCellDef=\\\"let user\\\">\\n          <a [routerLink]=\\\"config.getPanelUrl('clients-users/users/' + user.id.toString())\\\">\\n            {{user.username}}\\n          </a>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"full_name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Name</th>\\n        <td mat-cell *matCellDef=\\\"let user\\\">\\n          <a [routerLink]=\\\"config.getPanelUrl('clients-users/users/' + user.id.toString())\\\">\\n            {{user.full_name}}\\n          </a>\\n        </td>\\n      </ng-container>\\n      <ng-container matColumnDef=\\\"(actions)\\\">\\n        <th mat-header-cell *matHeaderCellDef>Actions</th>\\n        <td mat-cell *matCellDef=\\\"let user\\\">\\n          <app-object-actions [objectActions]=\\\"getUserActions(user)\\\" [maxVisibleActions]=\\\"2\\\">\\n          </app-object-actions>\\n        </td>\\n      </ng-container>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n    <div fxLayout=\\\"row\\\">\\n      <button mat-button color=\\\"primary\\\" (click)=\\\"associateNewUser()\\\">ASSOCIATE USER</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Associate client {{data.client.name}} with a user</h1>\\n<div mat-dialog-content>\\n  <div [formGroup]=\\\"associateUserForm\\\">\\n    <mat-form-field>\\n      <mat-select formControlName=\\\"selectedUser\\\" placeholder=\\\"User to associate\\\">\\n        <mat-option *ngFor=\\\"let user of availableUsers\\\" [value]=\\\"user.id\\\">\\n          {{user.full_name}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n  <button mat-button disabled=\\\"{{!(this.selectedUser.value > 0)}}\\\" (click)=\\\"associateUser()\\\"\\n          [color]=\\\"'primary'\\\">\\n    Associate user\\n  </button>\\n</div>\\n\"","module.exports = \"<form [formGroup]=\\\"clientForm\\\">\\n  <app-form-errors #formErrors [formGroup]=\\\"clientForm\\\"></app-form-errors>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"First name\\\" type=\\\"text\\\" formControlName=\\\"first_name\\\" required>\\n    <mat-error>{{backendErrors['name'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <mat-label for=\\\"last_name\\\">Last name</mat-label>\\n    <input matInput id=\\\"last_name\\\" type=\\\"text\\\" formControlName=\\\"last_name\\\" required>\\n    <mat-error>{{backendErrors['last_name'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Account e-mail address\\\" type=\\\"text\\\" formControlName=\\\"email\\\" required>\\n    <mat-error>{{backendErrors['email'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Country\\\" type=\\\"text\\\" formControlName=\\\"country\\\" required\\n           [matAutocomplete]=\\\"autocompleteCountry\\\">\\n    <mat-autocomplete #autocompleteCountry=\\\"matAutocomplete\\\" [displayWith]=\\\"countryDisplay\\\">\\n      <mat-option *ngFor=\\\"let country of filteredCountries$ | async\\\" [value]=\\\"country\\\">\\n        {{country.label}}\\n      </mat-option>\\n    </mat-autocomplete>\\n    <mat-error>{{backendErrors['country'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Company\\\" type=\\\"text\\\" formControlName=\\\"company\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"VAT ID\\\" type=\\\"text\\\" formControlName=\\\"vat_id\\\">\\n    <mat-error>{{backendErrors['vat_id'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-checkbox formControlName=\\\"tax_exempt\\\" [color]=\\\"'primary'\\\">\\n    Tax exempt\\n  </mat-checkbox>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Address line 1\\\" type=\\\"text\\\" formControlName=\\\"address1\\\" required>\\n    <mat-error>{{backendErrors['address1'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Address line 2\\\" type=\\\"text\\\" formControlName=\\\"address2\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"one-third-width one-third-width-spacing\\\">\\n    <input matInput placeholder=\\\"Country/state\\\" type=\\\"text\\\" formControlName=\\\"state\\\" required>\\n    <mat-error>{{backendErrors['state'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"one-third-width one-third-width-spacing\\\">\\n    <input matInput placeholder=\\\"City\\\" type=\\\"text\\\" formControlName=\\\"city\\\" required>\\n    <mat-error>{{backendErrors['city'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"one-third-width\\\">\\n    <input matInput placeholder=\\\"Zip code\\\" type=\\\"text\\\" formControlName=\\\"zip_code\\\" required>\\n    <mat-error>{{backendErrors['zip_code'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <input matInput placeholder=\\\"Phone\\\" type=\\\"text\\\" formControlName=\\\"phone\\\" required>\\n    <mat-error>{{backendErrors['phone'] || 'This field is required!' }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field class=\\\"full-width\\\">\\n    <mat-select formControlName=\\\"currency\\\" placeholder=\\\"Currency\\\">\\n      <mat-option *ngFor=\\\"let currency of createOptions.currencies\\\" [value]=\\\"currency\\\">{{currency}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy9jbGllbnQtY3JlYXRlL2NsaWVudC1jcmVhdGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IClientModel } from '../../../../shared/fleio-api/client-user/model/client.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClientListUIService } from '../client-list-ui.service';\n\n@Component({\n  selector: 'app-client-create',\n  templateUrl: './client-create.component.html',\n  styleUrls: ['./client-create.component.scss']\n})\nexport class ClientCreateComponent extends DetailsBase<IClientModel> {\n  constructor(route: ActivatedRoute, clientListUIService: ClientListUIService) {\n    super(route, clientListUIService, 'create', null);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy9jbGllbnQtZGV0YWlscy9jbGllbnQtZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClientListUIService } from '../client-list-ui.service';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IClientModel } from '../../../../shared/fleio-api/client-user/model/client.model';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.scss']\n})\nexport class ClientDetailsComponent extends DetailsBase<IClientModel> {\n  constructor(route: ActivatedRoute, clientListUIService: ClientListUIService) {\n    super(route, clientListUIService, 'details', 'client');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy9jbGllbnQtZWRpdC9jbGllbnQtZWRpdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IClientModel } from '../../../../shared/fleio-api/client-user/model/client.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClientListUIService } from '../client-list-ui.service';\n\n@Component({\n  selector: 'app-client-edit',\n  templateUrl: './client-edit.component.html',\n  styleUrls: ['./client-edit.component.scss']\n})\nexport class ClientEditComponent extends DetailsBase<IClientModel> {\n  constructor(route: ActivatedRoute, clientListUIService: ClientListUIService) {\n    super(route, clientListUIService, 'edit', 'client');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { IObjectListUIService } from '../../../shared/ui/objects-view/interfaces/object-list-ui-service';\nimport { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IObjectUIService } from '../../../shared/ui/objects-view/interfaces/object-ui-service';\nimport { ITableData } from '../../../shared/ui/objects-view/interfaces/table-data/table-data';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { ITableRow } from '../../../shared/ui/objects-view/interfaces/table-data/table-row';\nimport { ColumnType } from '../../../shared/ui/objects-view/interfaces/table-data/column-definition';\nimport { IClientModel } from '../../../shared/fleio-api/client-user/model/client.model';\nimport { ClientsApiService } from '../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { ClientUIService } from './client-ui.service';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { DatePipe } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientListUIService implements IObjectListUIService {\n  private readonly datePipe: DatePipe;\n\n  constructor(private router: Router, private config: ConfigService, private clientsApi: ClientsApiService) {\n    this.datePipe = new DatePipe(this.config.locale);\n  }\n\n  getObjectUIService(\n    object: IBaseFleioObjectModel, permissions: IPermissionsModel, state: string\n  ): IObjectUIService {\n    return new ClientUIService(\n      object as IClientModel, permissions, state, this.router, this.config, this.clientsApi,\n    );\n  }\n\n  getTableData(objectList: FleioObjectsList<IClientModel>): ITableData {\n    const tableData: ITableData = {\n      header: {\n        columns: [\n          // {type: ColumnType.Image, displayName: 'Image', enableSort: false, fieldName: '(image)'},\n          {type: ColumnType.Value, displayName: 'ID', enableSort: false, fieldName: 'id'},\n          {type: ColumnType.Value, displayName: 'Name', enableSort: false, fieldName: 'name'},\n          {type: ColumnType.Value, displayName: 'Up to date credit', enableSort: true, fieldName: 'uptodate_credit'},\n          {type: ColumnType.Value, displayName: 'Out of credit', enableSort: false, fieldName: 'outofcredit_datetime'},\n          {type: ColumnType.Value, displayName: 'Configuration', enableSort: true, fieldName: 'configuration_name'},\n          {type: ColumnType.Value, displayName: 'Group', enableSort: true, fieldName: 'group_name'},\n          {type: ColumnType.Value, displayName: 'Company', enableSort: true, fieldName: 'company'},\n          {type: ColumnType.Actions, displayName: 'Actions', enableSort: false, fieldName: '(actions)'},\n        ],\n        columnNames: [\n          /* '(image)', */'id', 'name', 'uptodate_credit', 'outofcredit_datetime', 'configuration_name',\n          'group_name', 'company', '(actions)',\n        ],\n        statusColumn: 'id',\n      },\n      rows: [],\n    };\n\n    for (const client of objectList.objects) {\n      const rowUIService = this.getObjectUIService(client, objectList.permissions, 'uptodate_credit');\n      // TODO: add table row class that performs icon/status/url/actions initialization\n      const row: ITableRow = {\n        cells: {\n          id: {text: `${client.id}`},\n          name: {text: client.name},\n          uptodate_credit: {text: `${client.uptodate_credit} ${client.currency}`},\n          outofcredit_datetime: {\n            text: client.outofcredit_datetime ? this.datePipe.transform(client.outofcredit_datetime) : 'n/a',\n          },\n          configuration_name: {text: client.configuration_name},\n          group_name: {text: client.group_name || 'n/a'},\n          company: {text: client.company},\n        },\n        icon: rowUIService.getIcon(),\n        status: rowUIService.getStatus(),\n        url: rowUIService.getDetailsLink(),\n        actions: rowUIService.getActions(),\n      };\n\n      tableData.rows.push(row);\n    }\n\n    return tableData;\n  }\n\n  getActions(objectList: FleioObjectsList<IBaseFleioObjectModel>): IAction[] {\n    return [\n      new RouterLinkAction({\n        name: 'Create new client',\n        tooltip: 'Create new client',\n        icon: {name: 'add'},\n        router: this.router,\n        routerUrl: this.config.getPanelUrl('clients-users/clients/create')\n      })\n    ];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy9jbGllbnQtbGlzdC9jbGllbnQtbGlzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RefreshService } from '../../../../shared/ui-api/refresh.service';\nimport { ClientListUIService } from '../client-list-ui.service';\nimport { ListBase } from '../../../../shared/ui/objects-view/list-base';\nimport { IClientModel } from '../../../../shared/fleio-api/client-user/model/client.model';\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.scss']\n})\nexport class ClientListComponent extends ListBase<IClientModel> implements OnInit {\n  constructor(\n    private route: ActivatedRoute, private clientListUIService: ClientListUIService,\n    private refreshService: RefreshService,\n  ) {\n    super(route, clientListUIService, refreshService, 'clients');\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n}\n","import { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { IIcon } from '../../../shared/ui/common/interfaces/icon';\nimport { ITitle } from '../../../shared/ui/objects-view/interfaces/card-data/card-title';\nimport { IObjectStatus, StatusType, StatusValue } from '../../../shared/ui/objects-view/interfaces/object-status';\nimport { ObjectUIServiceBase } from '../../../shared/ui/objects-view/object-ui-service-base';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IDataField } from '../../../shared/ui/objects-view/interfaces/card-data/data-field';\nimport { ApiCallAction, CallType } from '../../../shared/ui/objects-view/actions/api-call-action';\nimport { IDetailsTab } from '../../../shared/ui/objects-view/interfaces/details/details-tab';\nimport { ClientDetailsOverviewComponent } from './tabs/client-details-overview/client-details-overview.component';\nimport { IClientModel } from '../../../shared/fleio-api/client-user/model/client.model';\nimport { ClientsApiService } from '../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { DatePipe } from '@angular/common';\nimport { ClientEditFormComponent } from './tabs/client-edit-form/client-edit-form.component';\nimport { CallbackAction } from '../../../shared/ui/objects-view/actions/callback-action';\nimport { ClientDetailsInvoicesComponent } from './tabs/client-details-invoices/client-details-invoices.component';\nimport { ClientDetailsJournalComponent } from './tabs/client-details-journal/client-details-journal.component';\nimport { ClientDetailsBillingComponent } from './tabs/client-details-billing/client-details-billing.component';\nimport { ClientDetailsOpenstackServiceComponent } from './tabs/client-details-openstack-service/client-details-openstack-service.component';\nimport { ClientDetailsUsersComponent } from './tabs/client-details-users/client-details-users.component';\nimport { ClientDetailsConfigurationsComponent } from './tabs/client-details-configurations/client-details-configurations.component';\n\nexport class ClientUIService extends ObjectUIServiceBase<IClientModel> {\n  private readonly router: Router;\n  private readonly config: ConfigService;\n  private readonly clientsApi: ClientsApiService;\n\n\n  constructor(\n    client: IClientModel, permissions: IPermissionsModel, state: string,\n    router: Router, config: ConfigService, clientsApi: ClientsApiService\n  ) {\n    super(client, permissions, state);\n    this.router = router;\n    this.config = config;\n    this.clientsApi = clientsApi;\n  }\n\n  getIcon(): IIcon {\n    return {\n      name: '(gravatar)',\n      gravatarEmail: this.object.email,\n    };\n  }\n\n  getStatus(): IObjectStatus {\n    switch (this.object.status) {\n      case 'active':\n        return {type: StatusType.Defined, value: StatusValue.Active};\n      case 'suspended':\n        return {type: StatusType.Defined, value: StatusValue.Suspended};\n      case 'deleting':\n        return {type: StatusType.Changing, value: StatusValue.Error};\n      default:\n        return {type: StatusType.None, value: StatusValue.None};\n    }\n  }\n\n  getTitle(): ITitle {\n    switch (this.state) {\n      case 'details':\n        return {\n          text: `Client ${this.object.name}`,\n        };\n\n      case 'edit':\n        return {\n          text: `Edit ${this.object.name}`,\n        };\n\n      case 'create':\n        return {\n          text: 'Create client',\n        };\n\n      default:\n        return {\n          text: `${this.object.name}`,\n        };\n    }\n  }\n\n  getActions(): IAction[] {\n    const actions: IAction[] = [];\n\n    actions.push(new RouterLinkAction({\n        icon: {name: 'edit', class: 'fl-icons'},\n        name: 'Edit',\n        tooltip: 'Edit',\n        routerUrl: this.config.getPanelUrl(`clients-users/clients/${this.object.id}/edit`),\n        router: this.router,\n      }\n    ));\n\n    if (this.object.status === 'active') {\n      actions.push(new ApiCallAction(\n        {\n          object: this.object,\n          icon: {name: 'pause'},\n          name: 'Suspend',\n          tooltip: 'Suspend',\n          confirmOptions: {\n            confirm: true,\n            title: 'Suspend client',\n            message: `Are you sure you want to suspend client ${this.object.name} and all associated services`\n          },\n          apiService: this.clientsApi,\n          apiAction: 'suspend',\n        }\n      ));\n    }\n\n    if (this.object.status === 'suspended') {\n      actions.push(new ApiCallAction(\n        {\n          object: this.object,\n          icon: {name: 'play_arrow'},\n          name: 'Resume',\n          tooltip: 'Resume',\n          confirmOptions: {\n            confirm: false,\n            title: 'Resume client',\n            message: `Are you sure you want to resume client ${this.object.name}`\n          },\n          apiService: this.clientsApi,\n          apiAction: 'resume',\n        }\n      ));\n    }\n\n    const deleteAction = new ApiCallAction(\n      {\n        object: this.object,\n        icon: {name: 'delete'},\n        name: 'Delete',\n        tooltip: 'Delete',\n        confirmOptions: {\n          confirm: true,\n          title: 'Delete client',\n          message: `Are you sure you want to delete client ${this.object.name} and all associated services.` +\n            ' All data will be lost.',\n        },\n        apiService: this.clientsApi,\n        callType: CallType.Delete,\n      }\n    );\n\n    if (this.object.suspend_instead_of_terminate) {\n      deleteAction.tooltip = `Delete disabled by billing settings 'suspend instead of terminate enabled' set.`;\n      deleteAction.noPermissions = true;\n    }\n\n    actions.push(deleteAction);\n\n\n    return actions;\n  }\n\n  getDetailsLink(): string {\n    return this.config.getPanelUrl(`clients-users/clients/${this.object.id}`);\n  }\n\n  getCardFields(): IDataField[] {\n    const datePipe = new DatePipe(this.config.locale);\n    const fields = [\n      {\n        name: 'Created at',\n        value: `${datePipe.transform(this.object.date_created)}`\n      }\n    ];\n\n    if (this.object.outofcredit_datetime) {\n      fields.push(\n        {\n          name: 'Out of credit since',\n          value: `${this.object.outofcredit_datetime}`\n        }\n      );\n    } else {\n      fields.push(\n        {\n          name: 'Up to date credit',\n          value: `${this.object.uptodate_credit}`\n        }\n      );\n    }\n\n    return fields;\n  }\n\n  getTabs(): IDetailsTab[] {\n    switch (this.state) {\n      case 'details':\n        return [\n          {\n            tabName: 'Overview',\n            component: ClientDetailsOverviewComponent,\n          },\n          {\n            tabName: 'Billing',\n            component: ClientDetailsBillingComponent,\n          },\n          {\n            tabName: 'Invoices',\n            component: ClientDetailsInvoicesComponent,\n          },\n          {\n            tabName: 'Journal',\n            component: ClientDetailsJournalComponent,\n          },\n          {\n            tabName: 'Openstack service',\n            component: ClientDetailsOpenstackServiceComponent,\n          },\n          {\n            tabName: 'Users',\n            component: ClientDetailsUsersComponent,\n          },\n          {\n            tabName: 'Configurations',\n            component: ClientDetailsConfigurationsComponent,\n          },\n          // {\n          //   tabName: 'Services',\n          //   component: ClientDetailsServicesComponent,\n          // },\n        ];\n      case 'edit':\n      case 'create':\n        return [\n          {\n            tabName: 'Edit',\n            component: ClientEditFormComponent,\n          },\n        ];\n    }\n  }\n\n  getCardTags(): string[] {\n    const tags: string[] = [];\n    if (this.object.configuration_name) {\n      tags.push(this.object.configuration_name);\n    }\n\n    return tags;\n  }\n\n  getDetailsActions(): IAction[] {\n    const actions = [];\n\n    switch (this.state) {\n      case 'create':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`clients-users/clients`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({name: 'Create'}));\n        break;\n      case 'edit':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`clients-users/clients`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({name: 'Save'}));\n        break;\n      default:\n        break;\n    }\n\n    return actions;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IRouteConfig } from '../../../shared/ui-api/interfaces/route-config/route-config';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { ClientListComponent } from './client-list/client-list.component';\nimport { ClientListResolver } from '../../../shared/fleio-api/client-user/client/client-list.resolver';\nimport { ClientDetailsComponent } from './client-details/client-details.component';\nimport { ClientResolver } from '../../../shared/fleio-api/client-user/client/client.resolver';\nimport { ClientCreateComponent } from './client-create/client-create.component';\nimport { ClientEditComponent } from './client-edit/client-edit.component';\nimport { ClientCreateOptionsResolver } from '../../../shared/fleio-api/client-user/client/client-create-options.resolver';\nimport { FilterTypes } from '../../../shared/ui-api/interfaces/route-config/filter-types';\nimport { OrderingDirection } from '../../../shared/ui-api/interfaces/route-config/ordering-directions';\nimport { AuthGuard } from '../../../shared/auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientListComponent,\n    resolve: {\n      clients: ClientListResolver\n    },\n    canActivate: [AuthGuard],\n    data: {\n      config: {\n        feature: 'clients&users.clients',\n        search: {\n          show: true,\n          placeholder: 'Search clients ...',\n        },\n        subheader: {\n          objectName: 'client',\n          objectNamePlural: 'clients',\n          objectList(data): FleioObjectsList<IBaseFleioObjectModel> {\n            return data.clients;\n          }\n        },\n        ordering: {\n          default: {\n            field: 'date_created',\n            direction: OrderingDirection.Descending,\n            display: 'Date created',\n          },\n          options: [\n            {display: 'Company', field: 'company'},\n            {display: 'Country', field: 'country'},\n            {display: 'State', field: 'state'},\n            {display: 'Date created', field: 'date_created'},\n            {display: 'Up to date credit', field: 'uptodate_credit'},\n            {display: 'Configuration name', field: 'configuration_name'},\n            {display: 'Group name', field: 'group_name'},\n          ]\n        },\n        filterOptions: [\n          {\n            field: 'date_created',\n            display: 'Date created',\n            type: FilterTypes.Date\n          },\n          {\n            field: 'has_billing_agreement',\n            display: 'Has billing agreement',\n            type: FilterTypes.Boolean\n          },\n          {\n            field: 'has_services',\n            display: 'Has services',\n            type: FilterTypes.Boolean\n          },\n          {\n            field: 'has_instances',\n            display: 'Has instances',\n            type: FilterTypes.Boolean\n          }\n        ],\n      } as IRouteConfig,\n    },\n    runGuardsAndResolvers: 'always'\n  },\n  {\n    path: 'create',\n    component: ClientCreateComponent,\n    resolve: {\n      createOptions: ClientCreateOptionsResolver\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: () => {\n          return 'Create client';\n        },\n      } as IRouteConfig,\n    }\n  },\n  {\n    path: ':id',\n    component: ClientDetailsComponent,\n    resolve: {\n      client: ClientResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: (data) => {\n          return data.client.name;\n        },\n      } as IRouteConfig,\n    }\n  },\n  {\n    path: ':id/edit',\n    component: ClientEditComponent,\n    resolve: {\n      client: ClientResolver,\n      createOptions: ClientCreateOptionsResolver\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: (data) => {\n          return `Edit ${data.client.name}`;\n        },\n      } as IRouteConfig,\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ClientsRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientListComponent } from './client-list/client-list.component';\nimport { ClientsRoutingModule } from './clients-routing.module';\nimport { ClientDetailsComponent } from './client-details/client-details.component';\nimport { ClientDetailsOverviewComponent } from './tabs/client-details-overview/client-details-overview.component';\nimport { ObjectsViewModule } from '../../../shared/ui/objects-view/objects-view.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ClientEditFormComponent } from './tabs/client-edit-form/client-edit-form.component';\nimport { ClientEditComponent } from './client-edit/client-edit.component';\nimport { ClientCreateComponent } from './client-create/client-create.component';\nimport { ErrorHandlingModule } from '../../../shared/error-handling/error-handling.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { FleioDataControlsModule } from '../../../shared/fleio-data-controls/fleio-data-controls.module';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ClientDetailsInvoicesComponent } from './tabs/client-details-invoices/client-details-invoices.component';\nimport { ClientDetailsJournalComponent } from './tabs/client-details-journal/client-details-journal.component';\nimport { ClientDetailsBillingComponent } from './tabs/client-details-billing/client-details-billing.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ClientDetailsOpenstackServiceComponent } from './tabs/client-details-openstack-service/client-details-openstack-service.component';\nimport { ClientDetailsUsersComponent } from './tabs/client-details-users/client-details-users.component';\nimport { ClientDetailsConfigurationsComponent } from './tabs/client-details-configurations/client-details-configurations.component';\nimport { ClientDetailsServicesComponent } from './tabs/client-details-services/client-details-services.component';\nimport { UiModule } from '../../../shared/ui/ui.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AssociateUserDialogComponent } from './tabs/client-details-users/dialogs/associate-user-dialog/associate-user-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport {\n  ChangeConfigurationDialogComponent\n} from './tabs/client-details-configurations/dialogs/change-configuration-dialog/change-configuration-dialog.component';\nimport {\n  ChangePricingPlanDialogComponent\n} from './tabs/client-details-openstack-service/dialogs/change-pricing-plan-dialog/change-pricing-plan-dialog.component';\nimport {\n  CreateOpenstackServiceDialogComponent\n} from './tabs/client-details-openstack-service/dialogs/create-openstack-service-dialog/create-openstack-service-dialog.component';\n\n@NgModule({\n  declarations: [\n    ClientListComponent,\n    ClientDetailsComponent,\n    ClientDetailsOverviewComponent,\n    ClientEditFormComponent,\n    ClientEditComponent,\n    ClientCreateComponent,\n    ClientDetailsInvoicesComponent,\n    ClientDetailsJournalComponent,\n    ClientDetailsBillingComponent,\n    ClientDetailsOpenstackServiceComponent,\n    ClientDetailsUsersComponent,\n    ClientDetailsConfigurationsComponent,\n    ClientDetailsServicesComponent,\n    AssociateUserDialogComponent,\n    ChangeConfigurationDialogComponent,\n    ChangePricingPlanDialogComponent,\n    CreateOpenstackServiceDialogComponent,\n  ],\n  entryComponents: [\n    ClientDetailsOverviewComponent,\n    ClientEditFormComponent,\n    ClientDetailsInvoicesComponent,\n    ClientDetailsJournalComponent,\n    ClientDetailsBillingComponent,\n    ClientDetailsOpenstackServiceComponent,\n    ClientDetailsUsersComponent,\n    ClientDetailsConfigurationsComponent,\n    ClientDetailsServicesComponent,\n    AssociateUserDialogComponent,\n    ChangeConfigurationDialogComponent,\n    ChangePricingPlanDialogComponent,\n    CreateOpenstackServiceDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    ClientsRoutingModule,\n    ObjectsViewModule,\n    FlexLayoutModule,\n    ErrorHandlingModule,\n    MatFormFieldModule,\n    MatCheckboxModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    FleioDataControlsModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSlideToggleModule,\n    UiModule,\n    MatButtonModule,\n    MatDialogModule,\n  ]\n})\nexport class ClientsModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLWJpbGxpbmcvY2xpZW50LWRldGFpbHMtYmlsbGluZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport {\n  ServiceDynamicUsagesApiService\n} from '../../../../../shared/fleio-api/billing/service-dynamic-usage/service-dynamic-usages-api.service';\nimport { FleioObjectsList } from '../../../../../shared/fleio-api/fleio-objects-list';\nimport { IServiceDynamicUsageModel } from '../../../../../shared/fleio-api/billing/model/service-dynamic-usage.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\n\n@Component({\n  selector: 'app-client-details-billing',\n  templateUrl: './client-details-billing.component.html',\n  styleUrls: ['./client-details-billing.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class ClientDetailsBillingComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  serviceDynamicUsageList: FleioObjectsList<IServiceDynamicUsageModel> = null;\n  incomeSDUList: IServiceDynamicUsageModel[] = null;\n  costSDUList: IServiceDynamicUsageModel[] = null;\n  dynamicUsage: IServiceDynamicUsageModel = null;\n  dynamicUsageCost: IServiceDynamicUsageModel = null;\n\n  constructor(private serviceDynamicUsagesApiService: ServiceDynamicUsagesApiService) {\n    super();\n  }\n\n  selectFirstServiceDynamicUsage() {\n    this.dynamicUsage = this.incomeSDUList[0];\n    this.dynamicUsageCost = this.costSDUList[0];\n  }\n\n  ngOnInit() {\n    this.serviceDynamicUsagesApiService.getForClient(this.object.id as number).subscribe((list) => {\n      this.serviceDynamicUsageList = list;\n      this.incomeSDUList = [];\n      this.costSDUList = [];\n      for (const serviceDynamicUsage of list.objects) {\n        if (serviceDynamicUsage.service) {\n          this.incomeSDUList.push(serviceDynamicUsage);\n        } else {\n          this.costSDUList.push(serviceDynamicUsage);\n        }\n      }\n\n      this.selectFirstServiceDynamicUsage();\n    });\n\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLWNvbmZpZ3VyYXRpb25zL2NsaWVudC1kZXRhaWxzLWNvbmZpZ3VyYXRpb25zLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { ClientsApiService } from '../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { IConfigurationModel } from '../../../../../shared/fleio-api/configurations/model/configuration.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangeConfigurationDialogComponent } from './dialogs/change-configuration-dialog/change-configuration-dialog.component';\n\n@Component({\n  selector: 'app-client-details-configurations',\n  templateUrl: './client-details-configurations.component.html',\n  styleUrls: ['./client-details-configurations.component.scss']\n})\nexport class ClientDetailsConfigurationsComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  configuration: IConfigurationModel;\n\n  constructor(\n    private clientsApi: ClientsApiService,\n    private config: ConfigService,\n    private matDialog: MatDialog,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setupRefreshTimer(3000);\n  }\n\n  protected refreshData() {\n    this.clientsApi.objectGetAction(\n      this.object.id, 'get_configuration'\n    ).subscribe(configuration => {\n      this.configuration = configuration;\n    });\n  }\n\n  changeConfiguration() {\n    this.matDialog.open(\n      ChangeConfigurationDialogComponent, {\n        data: {\n          client: this.object,\n          configuration: this.configuration,\n        }\n      }\n    ).afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLWNvbmZpZ3VyYXRpb25zL2RpYWxvZ3MvY2hhbmdlLWNvbmZpZ3VyYXRpb24tZGlhbG9nL2NoYW5nZS1jb25maWd1cmF0aW9uLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IClientModel } from '../../../../../../../shared/fleio-api/client-user/model/client.model';\nimport { ClientsApiService } from '../../../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { NotificationService } from '../../../../../../../shared/ui-api/notification.service';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { IConfigurationModel } from '../../../../../../../shared/fleio-api/configurations/model/configuration.model';\n\n@Component({\n  selector: 'app-change-configuration-dialog',\n  templateUrl: './change-configuration-dialog.component.html',\n  styleUrls: ['./change-configuration-dialog.component.scss']\n})\nexport class ChangeConfigurationDialogComponent implements OnInit {\n  changeConfigurationFrom = this.formBuilder.group({\n    selectedConfiguration: [null, Validators.required]\n  });\n\n  selectedConfiguration = this.changeConfigurationFrom.controls.selectedConfiguration;\n  availableConfigurations: IConfigurationModel[];\n\n  constructor(\n    public dialogRef: MatDialogRef<ChangeConfigurationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      client: IClientModel,\n      configuration: IConfigurationModel,\n    },\n    private formBuilder: FormBuilder,\n    private clientsApi: ClientsApiService,\n    private notificationService: NotificationService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.clientsApi.objectGetAction(\n      this.data.client.id,\n      'get_configurations_for_client',\n    ).subscribe(availableConfigurations => {\n      this.availableConfigurations = availableConfigurations.configurations;\n    });\n  }\n\n  close() {\n    this.dialogRef.close(false);\n  }\n\n  changeConfiguration() {\n    this.clientsApi.objectPostAction(this.data.client.id, 'change_configuration', {\n      id: this.data.client.id,\n      configuration: this.selectedConfiguration.value,\n    }).pipe(\n      catchError(() => {\n        this.notificationService.showMessage('Failed to change configuration');\n        return EMPTY;\n      }),\n    ).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLWludm9pY2VzL2NsaWVudC1kZXRhaWxzLWludm9pY2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { ClientsApiService } from '../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { IInvoiceModel } from '../../../../../shared/fleio-api/billing/model/invoice.model';\nimport { InvoicesApiService } from '../../../../../shared/fleio-api/billing/invoices/invoices-api.service';\n\n@Component({\n  selector: 'app-client-details-invoices',\n  templateUrl: './client-details-invoices.component.html',\n  styleUrls: ['./client-details-invoices.component.scss']\n})\nexport class ClientDetailsInvoicesComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  invoices: IInvoiceModel[];\n  displayedColumns: string[] = ['id', 'status', 'issue_date', 'total'];\n\n  constructor(\n    private clientsApi: ClientsApiService,\n    private invoicesApi: InvoicesApiService,\n    private config: ConfigService,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setupRefreshTimer(3000);\n  }\n\n  protected refreshData() {\n    this.invoicesApi.list({\n      client: this.object.id,\n      page_size: 20,\n    }).subscribe(invoices => {\n      this.invoices = invoices.objects;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLWpvdXJuYWwvY2xpZW50LWRldGFpbHMtam91cm5hbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { ClientsApiService } from '../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { IJournalEntryModel } from '../../../../../shared/fleio-api/billing/model/journal-entry.model';\nimport { JournalsApiService } from '../../../../../shared/fleio-api/billing/journal/journal-api.service';\n\n@Component({\n  selector: 'app-client-details-journal',\n  templateUrl: './client-details-journal.component.html',\n  styleUrls: ['./client-details-journal.component.scss']\n})\nexport class ClientDetailsJournalComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  journalEntries: IJournalEntryModel[];\n  displayedColumns: string[] = ['date', 'destination', 'source', 'amount'];\n\n  constructor(\n    private clientsApi: ClientsApiService,\n    private journalsApiService: JournalsApiService,\n    private config: ConfigService,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setupRefreshTimer(3000);\n  }\n\n  protected refreshData() {\n    this.journalsApiService.list({\n      client_id: this.object.id,\n      page_size: 20,\n    }).subscribe(journalEntries => {\n      this.journalEntries = journalEntries.objects;\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLW9wZW5zdGFjay1zZXJ2aWNlL2NsaWVudC1kZXRhaWxzLW9wZW5zdGFjay1zZXJ2aWNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { ClientsApiService } from '../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { CloudClientsApiService } from '../../../../../shared/fleio-api/cloud/clients/cloud-clients-api.service';\nimport { IServiceModel } from '../../../../../shared/fleio-api/billing/model/service.model';\nimport { IProjectModel } from '../../../../../shared/fleio-api/cloud/model/project.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePricingPlanDialogComponent } from './dialogs/change-pricing-plan-dialog/change-pricing-plan-dialog.component';\nimport { ServicesApiService } from '../../../../../shared/fleio-api/billing/services/service-api.service';\nimport { NotificationService } from '../../../../../shared/ui-api/notification.service';\nimport { CreateOpenstackServiceDialogComponent } from './dialogs/create-openstack-service-dialog/create-openstack-service-dialog.component';\n\n@Component({\n  selector: 'app-client-details-openstack-service',\n  templateUrl: './client-details-openstack-service.component.html',\n  styleUrls: ['./client-details-openstack-service.component.scss']\n})\nexport class ClientDetailsOpenstackServiceComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  openstackServices: IServiceModel[];\n  openstackProjects: { [serviceId: number]: IProjectModel };\n  displayedColumns: string[] = ['date', 'destination', 'source', 'amount'];\n\n  constructor(\n    private clientsApi: ClientsApiService,\n    private cloudClientsApi: CloudClientsApiService,\n    private config: ConfigService,\n    private matDialog: MatDialog,\n    private servicesApi: ServicesApiService,\n    private notificationService: NotificationService,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setupRefreshTimer(3000);\n  }\n\n  protected refreshData() {\n    this.cloudClientsApi.objectGetAction(\n      this.object.id, 'openstack_services'\n    ).subscribe(openstackServices => {\n      this.openstackServices = openstackServices.services;\n      this.openstackProjects = openstackServices.projects;\n    });\n  }\n\n  changePricingPlan(service: IServiceModel) {\n    this.matDialog.open(\n      ChangePricingPlanDialogComponent, {\n        data: {\n          client: this.object,\n          service,\n        }\n      }\n    ).afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n\n  terminateService(service: IServiceModel) {\n    this.notificationService.confirmDialog({\n      title: `Terminate service ${service.id}`,\n      message: 'Are you sure?',\n      importantMessage: 'This will permanently delete data.',\n    }).subscribe(dialogResult => {\n      if (dialogResult === 'yes') {\n        this.servicesApi.objectPostAction(service.id, 'terminate', {\n          id: service.id\n        }).subscribe(() => {\n          this.notificationService.showMessage('Service termination scheduled');\n        });\n      }\n    });\n  }\n\n  createOpenstackService() {\n    this.matDialog.open(\n      CreateOpenstackServiceDialogComponent, {\n        data: {\n          client: this.object,\n        }\n      }\n    ).afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLW9wZW5zdGFjay1zZXJ2aWNlL2RpYWxvZ3MvY2hhbmdlLXByaWNpbmctcGxhbi1kaWFsb2cvY2hhbmdlLXByaWNpbmctcGxhbi1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IClientModel } from '../../../../../../../shared/fleio-api/client-user/model/client.model';\nimport { NotificationService } from '../../../../../../../shared/ui-api/notification.service';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { IPricingPlanModel } from '../../../../../../../shared/fleio-api/cloud/model/pricing-plan.model';\nimport { IServiceModel } from '../../../../../../../shared/fleio-api/billing/model/service.model';\nimport { CloudClientsApiService } from '../../../../../../../shared/fleio-api/cloud/clients/cloud-clients-api.service';\nimport { PricingPlansApiService } from '../../../../../../../shared/fleio-api/cloud/pricing-plan/pricing-plans-api.service';\nimport { ServicesApiService } from '../../../../../../../shared/fleio-api/billing/services/service-api.service';\n\n@Component({\n  selector: 'app-change-pricing-plan-dialog',\n  templateUrl: './change-pricing-plan-dialog.component.html',\n  styleUrls: ['./change-pricing-plan-dialog.component.scss']\n})\nexport class ChangePricingPlanDialogComponent implements OnInit {\n  changePlanFrom = this.formBuilder.group({\n    selectedPlan: [null, Validators.required]\n  });\n\n  selectedPlan = this.changePlanFrom.controls.selectedPlan;\n  currentPlan = this.data.service.pricing_plan;\n  availablePlans: IPricingPlanModel[];\n\n  constructor(\n    public dialogRef: MatDialogRef<ChangePricingPlanDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      client: IClientModel,\n      service: IServiceModel,\n    },\n    private formBuilder: FormBuilder,\n    private cloudClientsApi: CloudClientsApiService,\n    private notificationService: NotificationService,\n    private pricingPlansApi: PricingPlansApiService,\n    private servicesApi: ServicesApiService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.pricingPlansApi.list().subscribe(availablePlans => {\n      this.availablePlans = availablePlans.objects;\n    });\n  }\n\n  close() {\n    this.dialogRef.close(false);\n  }\n\n  changePlan() {\n    this.servicesApi.objectPostAction(this.data.service.id, 'update_billing_plan', {\n      plan: this.selectedPlan.value,\n    }).pipe(\n      catchError(() => {\n        this.notificationService.showMessage('Failed to change pricing plan');\n        return EMPTY;\n      }),\n    ).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLW9wZW5zdGFjay1zZXJ2aWNlL2RpYWxvZ3MvY3JlYXRlLW9wZW5zdGFjay1zZXJ2aWNlLWRpYWxvZy9jcmVhdGUtb3BlbnN0YWNrLXNlcnZpY2UtZGlhbG9nLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IClientModel } from '../../../../../../../shared/fleio-api/client-user/model/client.model';\nimport { CloudClientsApiService } from '../../../../../../../shared/fleio-api/cloud/clients/cloud-clients-api.service';\nimport { NotificationService } from '../../../../../../../shared/ui-api/notification.service';\nimport { catchError, map, mergeMap, startWith } from 'rxjs/operators';\nimport { EMPTY, Observable } from 'rxjs';\nimport { IProductModel } from '../../../../../../../shared/fleio-api/billing/model/product.model';\nimport { IProductCycleModel } from '../../../../../../../shared/fleio-api/billing/model/product-cycle.model';\nimport { IProjectModel } from '../../../../../../../shared/fleio-api/cloud/model/project.model';\nimport { ClientsApiService } from '../../../../../../../shared/fleio-api/client-user/client/clients-api.service';\n\n@Component({\n  selector: 'app-create-openstack-service-dialog',\n  templateUrl: './create-openstack-service-dialog.component.html',\n  styleUrls: ['./create-openstack-service-dialog.component.scss']\n})\nexport class CreateOpenstackServiceDialogComponent implements OnInit {\n  createOpenstackServiceForm = this.formBuilder.group({\n    product_id: ['', Validators.required],\n    product_cycle_id: ['', Validators.required],\n    create_new_project: [false],\n    project_id: [null, Validators.required]\n  });\n\n  availableProducts: IProductModel[];\n  selectedProductCycles: IProductCycleModel[];\n  filteredProjects$: Observable<IProjectModel[]>;\n  project = this.createOpenstackServiceForm.controls.project_id;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateOpenstackServiceDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {\n      client: IClientModel,\n    },\n    private formBuilder: FormBuilder,\n    private cloudClientsApi: CloudClientsApiService,\n    private notificationService: NotificationService,\n    private clientsApi: ClientsApiService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.cloudClientsApi.objectGetAction(\n      this.data.client.id, 'new_service_data',\n    ).subscribe((newServiceData => {\n      this.availableProducts = newServiceData.products;\n      if (this.availableProducts.length > 0) {\n        this.createOpenstackServiceForm.patchValue({\n          product_id: this.availableProducts[0].id,\n          product_cycle_id: this.availableProducts[0].cycles[0].id,\n        });\n      }\n    }));\n\n    this.createOpenstackServiceForm.controls.product_id.valueChanges.subscribe(\n      productId => {\n        this.selectedProductCycles = [];\n        for (const product of this.availableProducts) {\n          if (product.id === productId) {\n            this.selectedProductCycles = product.cycles;\n          }\n        }\n      }\n    );\n\n    this.createOpenstackServiceForm.controls.create_new_project.valueChanges.subscribe(\n      createNewProject => {\n        if (createNewProject) {\n          this.createOpenstackServiceForm.controls.project_id.disable();\n        } else {\n          this.createOpenstackServiceForm.controls.project_id.enable();\n        }\n      }\n    );\n\n    this.filteredProjects$ = this.project.valueChanges.pipe(\n      startWith(''),\n      map(value => {\n        if (value) {\n          return typeof value === 'string' ? value : value.project_id;\n        } else {\n          return null;\n        }\n      }),\n      mergeMap(value => {\n        return this.clientsApi.objectGetAction(\n          this.data.client.id,\n          'get_os_projects_for_os_service_creation',\n          value ? {search: value} : null,\n        ).pipe(map(projectsList => projectsList.objects));\n      })\n    );\n  }\n\n  projectDisplay(project?: IProjectModel): string | undefined {\n    if (project) {\n      return project.name;\n    } else {\n      return undefined;\n    }\n  }\n\n  close() {\n    this.dialogRef.close(false);\n  }\n\n  createOpenstackService() {\n    const params = this.createOpenstackServiceForm.value;\n    params.id = this.data.client.id;\n    if (params.project_id) {\n      params.project_id = params.project_id.project_id;\n    }\n\n    this.cloudClientsApi.objectPostAction(\n      this.data.client.id, 'create_openstack_service', params,\n    ).pipe(\n      catchError((response) => {\n        this.notificationService.showMessage(response.error.detail);\n        return EMPTY;\n      }),\n    ).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLW92ZXJ2aWV3L2NsaWVudC1kZXRhaWxzLW92ZXJ2aWV3LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\n\n@Component({\n  selector: 'app-clients-details-overview',\n  templateUrl: './client-details-overview.component.html',\n  styleUrls: ['./client-details-overview.component.scss']\n})\nexport class ClientDetailsOverviewComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLXNlcnZpY2VzL2NsaWVudC1kZXRhaWxzLXNlcnZpY2VzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\n\n@Component({\n  selector: 'app-client-details-services',\n  templateUrl: './client-details-services.component.html',\n  styleUrls: ['./client-details-services.component.scss']\n})\nexport class ClientDetailsServicesComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLXVzZXJzL2NsaWVudC1kZXRhaWxzLXVzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { IUserModel } from '../../../../../shared/auth/models/user.model';\nimport { ClientsApiService } from '../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { IAction } from '../../../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../../../shared/ui/objects-view/actions/router-link-action';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { Router } from '@angular/router';\nimport { ApiCallAction, CallType } from '../../../../../shared/ui/objects-view/actions/api-call-action';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssociateUserDialogComponent } from './dialogs/associate-user-dialog/associate-user-dialog.component';\n\n@Component({\n  selector: 'app-client-details-users',\n  templateUrl: './client-details-users.component.html',\n  styleUrls: ['./client-details-users.component.scss']\n})\nexport class ClientDetailsUsersComponent extends DetailsComponentBase<IClientModel> implements OnInit {\n  users: IUserModel[];\n  displayedColumns: string[] = ['username', 'full_name', '(actions)'];\n\n  constructor(\n    private clientsApi: ClientsApiService,\n    private config: ConfigService,\n    private router: Router,\n    private matDialog: MatDialog,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.setupRefreshTimer(3000);\n  }\n\n  protected refreshData() {\n    this.clientsApi.objectGetAction(this.object.id, 'get_users').subscribe(users => {\n      this.users = users.users;\n    });\n  }\n\n  getUserActions(user: IUserModel): IAction[] {\n    return [\n      new RouterLinkAction({\n        icon: {name: 'face'},\n        name: 'Impersonate user',\n        routerUrl: this.config.getPanelUrl(`clients-users/users/${user.id}/impersonate`),\n        router: this.router,\n      }),\n      new ApiCallAction({\n        icon: {name: 'link_off'},\n        name: 'Dissociate user',\n        confirmOptions: {\n          confirm: true,\n          title: 'Dissociate user',\n          message: `Are you sure you want to dissociate user ${user.full_name}`,\n        },\n        object: this.object,\n        apiService: this.clientsApi,\n        callType: CallType.Post,\n        apiAction: 'dissociate_user',\n        apiParams: {\n          id: this.object.id,\n          user_id: user.id,\n        },\n      }),\n    ];\n  }\n\n  associateNewUser() {\n    this.matDialog.open(\n      AssociateUserDialogComponent, {\n        data: {client: this.object}\n      }\n    ).afterClosed().subscribe(result => {\n      if (result) {\n        this.refreshData();\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1kZXRhaWxzLXVzZXJzL2RpYWxvZ3MvYXNzb2NpYXRlLXVzZXItZGlhbG9nL2Fzc29jaWF0ZS11c2VyLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IClientModel } from '../../../../../../../shared/fleio-api/client-user/model/client.model';\nimport { ClientsApiService } from '../../../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { NotificationService } from '../../../../../../../shared/ui-api/notification.service';\nimport { IUserModel } from '../../../../../../../shared/fleio-api/client-user/model/user.model';\nimport { catchError } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\n\n@Component({\n  selector: 'app-associate-user-dialog',\n  templateUrl: './associate-user-dialog.component.html',\n  styleUrls: ['./associate-user-dialog.component.scss']\n})\nexport class AssociateUserDialogComponent implements OnInit {\n  associateUserForm = this.formBuilder.group({\n    selectedUser: [null, Validators.required]\n  });\n\n  selectedUser = this.associateUserForm.controls.selectedUser;\n  availableUsers: IUserModel[];\n\n  constructor(\n    public dialogRef: MatDialogRef<AssociateUserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { client: IClientModel },\n    private formBuilder: FormBuilder,\n    private clientsApi: ClientsApiService,\n    private notificationService: NotificationService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.clientsApi.objectGetAction(this.data.client.id, 'get_users_not_in_client').subscribe(users => {\n      this.availableUsers = users.users;\n    });\n  }\n\n  close() {\n    this.dialogRef.close(false);\n  }\n\n  associateUser() {\n    this.clientsApi.objectPostAction(this.data.client.id, 'associate_user', {\n      id: this.data.client.id,\n      user_id: this.selectedUser.value,\n    }).pipe(\n      catchError(() => {\n        this.notificationService.showMessage('Failed to associate user');\n        return EMPTY;\n      }),\n    ).subscribe(() => {\n      this.dialogRef.close(true);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2NsaWVudHMtdXNlcnMvY2xpZW50cy90YWJzL2NsaWVudC1lZGl0LWZvcm0vY2xpZW50LWVkaXQtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { IActionResult } from '../../../../../shared/ui/objects-view/interfaces/actions/action-result';\nimport { ClientsApiService } from '../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { IClientCreateOptions } from '../../../../../shared/fleio-api/client-user/model/client-create-options';\nimport { ICountry } from '../../../../../shared/fleio-api/misc/model/country';\nimport { map, startWith } from 'rxjs/operators';\nimport { DetailsFormBase } from '../../../../../shared/ui/objects-view/details-form-base';\n\n@Component({\n  selector: 'app-client-edit-form',\n  templateUrl: './client-edit-form.component.html',\n  styleUrls: ['./client-edit-form.component.scss']\n})\nexport class ClientEditFormComponent extends DetailsFormBase<IClientModel> implements OnInit {\n  clientForm = this.formBuilder.group({\n    first_name: ['', Validators.required],\n    last_name: ['', Validators.required],\n    email: ['', Validators.required],\n    country: ['', Validators.required],\n    company: [''],\n    vat_id: [''],\n    tax_exempt: [''],\n    address1: ['', Validators.required],\n    address2: [''],\n    state: ['', Validators.required],\n    city: ['', Validators.required],\n    zip_code: ['', Validators.required],\n    phone: ['', Validators.required],\n    currency: ['', Validators.required],\n  });\n\n  country = this.clientForm.controls.country;\n\n  private createOptions: IClientCreateOptions;\n  private filteredCountries$: Observable<ICountry[]>;\n\n  constructor(\n    private formBuilder: FormBuilder, private clientApi: ClientsApiService, private router: Router,\n    private config: ConfigService, private activatedRoute: ActivatedRoute\n  ) {\n    super();\n  }\n\n  countryDisplay(country?: ICountry): string | undefined {\n    return country ? country.label : undefined;\n  }\n\n  findCountry(code: string): ICountry {\n    return this.createOptions.countries.filter(country => country.value === code)[0];\n  }\n\n  ngOnInit() {\n    this.objectController.actionCallback = () => this.saveClient();\n    this.createOptions = this.activatedRoute.snapshot.data.createOptions;\n    this.clientForm.patchValue(this.object);\n    if (!this.object.currency) {\n      this.clientForm.controls.currency.setValue(this.createOptions.default_currency);\n    }\n\n    if (this.object.country) {\n      this.country.setValue(this.findCountry(this.object.country));\n    }\n    this.filteredCountries$ = this.country.valueChanges.pipe(\n      startWith(''),\n      map(value => typeof value === 'string' ? value : value.label),\n      map(value => {\n        const lowerCaseValue = value.toLocaleLowerCase();\n        return this.createOptions.countries.filter(\n          country => country.label.toLocaleLowerCase().includes(lowerCaseValue)\n        );\n      })\n    );\n  }\n\n  saveClient(): Observable<IActionResult> {\n    const value = this.clientForm.value as IClientModel;\n\n    if (typeof value.country !== 'string') {\n      value.country = (value.country as ICountry).value;\n    }\n\n    if (!value.custom_fields) {\n      value.custom_fields = [];\n    }\n\n    let request;\n\n    if (this.object.id) {\n      value.id = this.object.id;\n      request = this.clientApi.update(value.id, value);\n    } else {\n      request = this.clientApi.create(value);\n    }\n\n    request.subscribe(() => {\n      this.router.navigateByUrl(\n        this.config.getPrevUrl('clients-users/clients')\n      ).catch(() => {\n      });\n    }, (error) => {\n      this.setErrors(error.error);\n    });\n\n    return of(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ConfigService } from '../../../config/config.service';\nimport { FleioApiService } from '../../fleio-api.service';\nimport { HttpClient } from '@angular/common/http';\nimport { IJournalEntryModel } from '../model/journal-entry.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JournalsApiService extends FleioApiService<IJournalEntryModel> {\n  // noinspection JSUnusedGlobalSymbols\n  constructor(protected httpClient: HttpClient, private config: ConfigService) {\n    super(config.getPanelApiUrl('billing/journal'));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { ClientsApiService } from './clients-api.service';\nimport { catchError } from 'rxjs/operators';\nimport { IClientCreateOptions } from '../model/client-create-options';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientCreateOptionsResolver implements Resolve<IClientCreateOptions> {\n  constructor(private clientsApi: ClientsApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IClientCreateOptions> | Promise<IClientCreateOptions> | IClientCreateOptions {\n    return this.clientsApi.createOptions()\n      .pipe(catchError(() => of(null))) as unknown as IClientCreateOptions;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { FleioObjectsList } from '../../fleio-objects-list';\nimport { Observable, of } from 'rxjs';\nimport { IListQueryParams } from '../../base-model/list-query-params';\nimport { IClientModel } from '../model/client.model';\nimport { ClientsApiService } from './clients-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientListResolver implements Resolve<FleioObjectsList<IClientModel>> {\n  constructor(private clientsApi: ClientsApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<FleioObjectsList<IClientModel>> | Promise<FleioObjectsList<IClientModel>> |\n    FleioObjectsList<IClientModel> {\n    return this.clientsApi.list(route.queryParams as IListQueryParams).pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { IClientModel } from '../model/client.model';\nimport { ClientsApiService } from './clients-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientResolver implements Resolve<IClientModel> {\n  constructor(private clientsApi: ClientsApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IClientModel> | Promise<IClientModel> | IClientModel {\n    return this.clientsApi.get(route.params.id).pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ConfigService } from '../../../config/config.service';\nimport { FleioApiService } from '../../fleio-api.service';\nimport { HttpClient } from '@angular/common/http';\nimport { IClientModel } from '../../client-user/model/client.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CloudClientsApiService extends FleioApiService<IClientModel> {\n  // noinspection JSUnusedGlobalSymbols\n  constructor(protected httpClient: HttpClient, private config: ConfigService) {\n    super(config.getPanelApiUrl('openstack/clients'));\n  }\n}\n"],"sourceRoot":""}