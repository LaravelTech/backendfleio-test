{"version":3,"sources":["./src/app/reseller/cloud/flavors/flavor-create/flavor-create.component.html","./src/app/reseller/cloud/flavors/flavor-details/flavor-details.component.html","./src/app/reseller/cloud/flavors/flavor-edit/flavor-edit.component.html","./src/app/reseller/cloud/flavors/flavor-list/flavor-list.component.html","./src/app/reseller/cloud/flavors/tabs/flavor-details-overview/flavor-details-overview.component.html","./src/app/reseller/cloud/flavors/tabs/flavor-edit-form/flavor-edit-form.component.html","./src/app/reseller/cloud/flavors/flavor-create/flavor-create.component.scss","./src/app/reseller/cloud/flavors/flavor-create/flavor-create.component.ts","./src/app/reseller/cloud/flavors/flavor-details/flavor-details.component.scss","./src/app/reseller/cloud/flavors/flavor-details/flavor-details.component.ts","./src/app/reseller/cloud/flavors/flavor-edit/flavor-edit.component.scss","./src/app/reseller/cloud/flavors/flavor-edit/flavor-edit.component.ts","./src/app/reseller/cloud/flavors/flavor-list-ui.service.ts","./src/app/reseller/cloud/flavors/flavor-list/flavor-list.component.scss","./src/app/reseller/cloud/flavors/flavor-list/flavor-list.component.ts","./src/app/reseller/cloud/flavors/flavor-ui.service.ts","./src/app/reseller/cloud/flavors/flavors-routing.module.ts","./src/app/reseller/cloud/flavors/flavors.module.ts","./src/app/reseller/cloud/flavors/tabs/flavor-details-overview/flavor-details-overview.component.scss","./src/app/reseller/cloud/flavors/tabs/flavor-details-overview/flavor-details-overview.component.ts","./src/app/reseller/cloud/flavors/tabs/flavor-edit-form/flavor-edit-form.component.scss","./src/app/reseller/cloud/flavors/tabs/flavor-edit-form/flavor-edit-form.component.ts","./src/app/shared/fleio-api/cloud/flavor/flavor-create-options.resolver.ts","./src/app/shared/fleio-api/cloud/flavor/flavor-list.resolver.ts","./src/app/shared/fleio-api/cloud/flavor/flavor-permissions.resolver.ts","./src/app/shared/fleio-api/cloud/flavor/flavor.resolver.ts","./src/app/shared/fleio-api/cloud/flavor/flavors-api.service.ts"],"names":[],"mappings":"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","file":"flavors-flavors-module-es5.js","sourcesContent":["module.exports = \"<app-object-details [objectController]=\\\"objectController\\\" [additionalClasses]=\\\"['fl-card-fixed-lg']\\\"></app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\"></app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\" [additionalClasses]=\\\"['fl-card-fixed-lg']\\\">\\n</app-object-details>\\n\"","module.exports = \"<app-objects-view [objectsListController]=\\\"objectListController\\\"></app-objects-view>\\n\"","module.exports = \"<div fxFlex=\\\"column\\\">\\n  <p class=\\\"fl-detail\\\">ID: {{object.id}}</p>\\n  <p class=\\\"fl-detail\\\">Name: {{object.name}}</p>\\n  <p class=\\\"fl-detail\\\">Ram: {{object.memory_mb}} MB</p>\\n  <p class=\\\"fl-detail\\\">Virtual CPUs: {{object.vcpus}} MB</p>\\n  <p class=\\\"fl-detail\\\">Disk space: {{object.root_gb}} GB</p>\\n  <p class=\\\"fl-detail\\\">Swap: {{object.swap}} GB</p>\\n  <p class=\\\"fl-detail\\\">Ephemeral storage: {{object.ephemeral_gb}} GB</p>\\n  <p class=\\\"fl-detail\\\">Disabled: {{object.disabled}}</p>\\n  <p class=\\\"fl-detail\\\">Public: {{object.is_public}}</p>\\n  <p class=\\\"fl-detail\\\">Region: {{object.region}}</p>\\n  <p class=\\\"fl-detail\\\">Description: {{object.description}}</p>\\n  <p class=\\\"fl-detail\\\">Group: {{object.flavor_group || 'n/a'}}</p>\\n</div>\\n\"","module.exports = \"<form [formGroup]=\\\"flavorForm\\\">\\n  <app-form-errors #formErrors [formGroup]=\\\"flavorForm\\\"></app-form-errors>\\n  <div fxLayout=\\\"column\\\">\\n     <mat-checkbox *ngIf=\\\"object.id\\\" formControlName=\\\"preserve_id\\\" color=\\\"primary\\\">\\n      Preserve existing flavor ID (not recommended for major changes)\\n    </mat-checkbox>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <input matInput placeholder=\\\"Flavor name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" required>\\n        <mat-error>{{backendErrors['name'] || 'Field is required' }}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <mat-select formControlName=\\\"region\\\" placeholder=\\\"Region\\\" required>\\n          <mat-option *ngFor=\\\"let region of createOptions.regions\\\"\\n                      [value]=\\\"region.id\\\">\\n            {{region.id}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <input matInput placeholder=\\\"Ram in MB\\\" type=\\\"number\\\"\\n               formControlName=\\\"memory_mb\\\" required>\\n        <mat-error>{{backendErrors['memory_mb'] || 'This field is required!' }}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <input matInput placeholder=\\\"Virtual CPUs\\\" type=\\\"number\\\"\\n               formControlName=\\\"vcpus\\\" required>\\n        <mat-error>{{backendErrors['vcpus'] || 'This field is required!' }}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <input matInput placeholder=\\\"Disk size (GB)\\\" type=\\\"number\\\"\\n               formControlName=\\\"root_gb\\\" required>\\n        <mat-error>{{backendErrors['root_gb'] || 'This field is required!' }}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <input matInput placeholder=\\\"Swap space (MB)\\\" type=\\\"number\\\"\\n               formControlName=\\\"swap\\\" required>\\n        <mat-error>{{backendErrors['swap'] || 'This field is required!' }}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <input matInput placeholder=\\\"Ephemeral disk space (GB)\\\" type=\\\"number\\\"\\n               formControlName=\\\"ephemeral_gb\\\" required>\\n        <mat-error>{{backendErrors['ephemeral_gb'] || 'This field is required!' }}</mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <mat-label>Description</mat-label>\\n        <textarea matInput formControlName=\\\"description\\\" rows=\\\"10\\\"></textarea>\\n      </mat-form-field>\\n    </div>\\n    <mat-checkbox formControlName=\\\"is_public\\\" color=\\\"primary\\\">\\n      Is public\\n    </mat-checkbox>\\n    <mat-checkbox formControlName=\\\"show_in_fleio\\\" color=\\\"primary\\\">\\n      Show in end user panel\\n    </mat-checkbox>\\n    <mat-checkbox formControlName=\\\"out_of_stock\\\" color=\\\"primary\\\">\\n      Out of stock\\n    </mat-checkbox>\\n  </div>\\n</form>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL2ZsYXZvcnMvZmxhdm9yLWNyZWF0ZS9mbGF2b3ItY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IFlavorModel } from '../../../../shared/fleio-api/cloud/model/flavor.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlavorListUIService } from '../flavor-list-ui.service';\n\n@Component({\n  selector: 'app-flavor-create',\n  templateUrl: './flavor-create.component.html',\n  styleUrls: ['./flavor-create.component.scss']\n})\nexport class FlavorCreateComponent extends DetailsBase<IFlavorModel> {\n  constructor(route: ActivatedRoute, flavorListUIService: FlavorListUIService) {\n    super(route, flavorListUIService, 'create', null);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL2ZsYXZvcnMvZmxhdm9yLWRldGFpbHMvZmxhdm9yLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { ActivatedRoute } from '@angular/router';\nimport { IFlavorModel } from '../../../../shared/fleio-api/cloud/model/flavor.model';\nimport { FlavorListUIService } from '../flavor-list-ui.service';\n\n@Component({\n  selector: 'app-flavor-details',\n  templateUrl: './flavor-details.component.html',\n  styleUrls: ['./flavor-details.component.scss']\n})\nexport class FlavorDetailsComponent extends DetailsBase<IFlavorModel> {\n  constructor(route: ActivatedRoute, flavorListUIService: FlavorListUIService) {\n    super(route, flavorListUIService, 'details', 'flavor');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL2ZsYXZvcnMvZmxhdm9yLWVkaXQvZmxhdm9yLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IFlavorModel } from '../../../../shared/fleio-api/cloud/model/flavor.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlavorListUIService } from '../flavor-list-ui.service';\n\n@Component({\n  selector: 'app-flavor-edit',\n  templateUrl: './flavor-edit.component.html',\n  styleUrls: ['./flavor-edit.component.scss']\n})\nexport class FlavorEditComponent extends DetailsBase<IFlavorModel> {\n  constructor(route: ActivatedRoute, flavorListUIService: FlavorListUIService) {\n    super(route, flavorListUIService, 'edit', 'flavor');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IObjectListUIService } from '../../../shared/ui/objects-view/interfaces/object-list-ui-service';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { IObjectUIService } from '../../../shared/ui/objects-view/interfaces/object-ui-service';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { ITableData } from '../../../shared/ui/objects-view/interfaces/table-data/table-data';\nimport { ColumnType } from '../../../shared/ui/objects-view/interfaces/table-data/column-definition';\nimport { ITableRow } from '../../../shared/ui/objects-view/interfaces/table-data/table-row';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { FlavorsApiService } from '../../../shared/fleio-api/cloud/flavor/flavors-api.service';\nimport { IFlavorModel } from '../../../shared/fleio-api/cloud/model/flavor.model';\nimport { FlavorUiService } from './flavor-ui.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorListUIService implements IObjectListUIService {\n  constructor(\n    private router: Router, private config: ConfigService,\n    private flavorsApiService: FlavorsApiService,\n  ) {\n  }\n\n  getObjectUIService(\n    object: IBaseFleioObjectModel, permissions: IPermissionsModel, state: string\n  ): IObjectUIService {\n    return new FlavorUiService(\n      object as IFlavorModel, permissions, state, this.router, this.config, this.flavorsApiService,\n    );\n  }\n\n  getTableData(objectList: FleioObjectsList<IFlavorModel>): ITableData {\n    const tableData: ITableData = {\n      header: {\n        columns: [\n          {type: ColumnType.Value, displayName: 'Name', enableSort: true, fieldName: 'name'},\n          {type: ColumnType.Value, displayName: 'Labels', enableSort: false, fieldName: 'tags'},\n          {type: ColumnType.Value, displayName: 'Region', enableSort: true, fieldName: 'region'},\n          {type: ColumnType.Value, displayName: 'vCPUs', enableSort: true, fieldName: 'vcpus'},\n          {type: ColumnType.Value, displayName: 'Memory', enableSort: true, fieldName: 'memory_mb'},\n          {type: ColumnType.Value, displayName: 'Root', enableSort: true, fieldName: 'root_gb'},\n          {type: ColumnType.Value, displayName: 'Description', enableSort: false, fieldName: 'description'},\n          {type: ColumnType.Actions, displayName: 'Actions', enableSort: false, fieldName: '(actions)'},\n        ],\n        columnNames: ['name', 'tags', 'region', 'vcpus', 'memory_mb', 'root_gb', 'description', '(actions)'],\n        statusColumn: 'name',\n      },\n      rows: [],\n    };\n\n    for (const flavor of objectList.objects) {\n      const rowUIService = this.getObjectUIService(\n        flavor, objectList.permissions, 'table-view'\n      ) as FlavorUiService;\n\n      const row: ITableRow = {\n        cells: {\n          name: {text: flavor.name},\n          tags: {tags: rowUIService.getCardTags()},\n          region: {text: flavor.region},\n          vcpus: {text: `${flavor.vcpus} vCPUs`},\n          memory_mb: {text: `${flavor.memory_mb} MB`},\n          root_gb: {text: `${flavor.root_gb} GB`},\n          description: {text: flavor.description},\n        },\n        icon: rowUIService.getIcon(),\n        status: rowUIService.getStatus(),\n        actions: rowUIService.getActions(),\n        url: rowUIService.isGlobal() ? null : rowUIService.getDetailsLink(),\n      };\n\n      tableData.rows.push(row);\n    }\n\n    return tableData;\n  }\n\n  getActions(objectList: FleioObjectsList<IBaseFleioObjectModel>): IAction[] {\n    return [\n      new RouterLinkAction({\n        name: 'Create new flavor',\n        tooltip: 'Create new flavor',\n        icon: {name: 'add'},\n        router: this.router,\n        routerUrl: this.config.getPanelUrl('cloud/flavors/create')\n      })\n    ];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL2ZsYXZvcnMvZmxhdm9yLWxpc3QvZmxhdm9yLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ListBase } from '../../../../shared/ui/objects-view/list-base';\nimport { IFlavorModel } from '../../../../shared/fleio-api/cloud/model/flavor.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { FlavorListUIService } from '../../flavors/flavor-list-ui.service';\nimport { RefreshService } from '../../../../shared/ui-api/refresh.service';\n\n@Component({\n  selector: 'app-flavor-list',\n  templateUrl: './flavor-list.component.html',\n  styleUrls: ['./flavor-list.component.scss']\n})\nexport class FlavorListComponent extends ListBase<IFlavorModel> implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute, private flavorListUIService: FlavorListUIService,\n    private refreshService: RefreshService,\n  ) {\n    super(route, flavorListUIService, refreshService, 'flavors');\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n","import { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { IIcon } from '../../../shared/ui/common/interfaces/icon';\nimport { ITitle } from '../../../shared/ui/objects-view/interfaces/card-data/card-title';\nimport { IObjectStatus, StatusType, StatusValue } from '../../../shared/ui/objects-view/interfaces/object-status';\nimport { ObjectUIServiceBase } from '../../../shared/ui/objects-view/object-ui-service-base';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IDataField } from '../../../shared/ui/objects-view/interfaces/card-data/data-field';\nimport { ApiCallAction, CallType } from '../../../shared/ui/objects-view/actions/api-call-action';\nimport { IDetailsTab } from '../../../shared/ui/objects-view/interfaces/details/details-tab';\nimport { DatePipe } from '@angular/common';\nimport { CallbackAction } from '../../../shared/ui/objects-view/actions/callback-action';\nimport { IFlavorModel } from '../../../shared/fleio-api/cloud/model/flavor.model';\nimport { FlavorsApiService } from '../../../shared/fleio-api/cloud/flavor/flavors-api.service';\nimport { FlavorDetailsOverviewComponent } from './tabs/flavor-details-overview/flavor-details-overview.component';\nimport { FlavorEditFormComponent } from './tabs/flavor-edit-form/flavor-edit-form.component';\n\nexport class FlavorUiService extends ObjectUIServiceBase<IFlavorModel> {\n  private readonly router: Router;\n  private readonly config: ConfigService;\n  private readonly flavorsApiService: FlavorsApiService;\n  private readonly datePipe: DatePipe;\n\n\n  constructor(\n    flavor: IFlavorModel, permissions: IPermissionsModel, state: string,\n    router: Router, config: ConfigService, flavorsApiService: FlavorsApiService\n  ) {\n    super(flavor, permissions, state);\n    this.router = router;\n    this.config = config;\n    this.flavorsApiService = flavorsApiService;\n    this.datePipe = new DatePipe(this.config.locale);\n  }\n\n  isGlobal(): boolean {\n    return !this.object.reseller_resources;\n  }\n\n  getIcon(): IIcon {\n    return null;\n  }\n\n  getStatus(): IObjectStatus {\n    if (this.object.disabled) {\n      return { type: StatusType.Defined, value: StatusValue.Disabled };\n    } else {\n      return { type: StatusType.Defined, value: StatusValue.Enabled };\n    }\n  }\n\n  getTitle(): ITitle {\n    switch (this.state) {\n      case 'edit':\n        return {\n          text: `Edit ${this.object.name}`,\n        };\n\n      case 'create':\n        return {\n          text: `Create new flavor`,\n        };\n\n      case 'details':\n      default:\n        return {\n          text: `${this.object.name}`,\n          subText: `${this.object.disabled ? 'DISABLED' : 'ACTIVE'}, ${this.object.region}`,\n        };\n    }\n  }\n\n  getActions(): IAction[] {\n    const actions: IAction[] = [];\n\n    if (!this.isGlobal()) {\n      actions.push(new RouterLinkAction({\n          icon: {name: 'edit', class: 'fl-icons'},\n          name: 'Edit',\n          tooltip: 'Edit',\n          routerUrl: this.config.getPanelUrl(`cloud/flavors/${this.object.id}/edit`),\n          router: this.router,\n        }\n      ));\n\n      actions.push(new ApiCallAction(\n        {\n          object: this.object,\n          icon: {name: 'delete'},\n          name: 'Delete',\n          tooltip: 'Delete',\n          confirmOptions: {\n            confirm: true,\n            title: 'Delete flavor',\n            message: `Are you sure you want to delete flavor ${this.object.name}`,\n          },\n          apiService: this.flavorsApiService,\n          callType: CallType.Delete,\n        }\n      ));\n    } else {\n      if (this.object.display_for_clients) {\n        actions.push(new ApiCallAction(\n          {\n            object: this.object,\n            icon: {name: 'visibility_off'},\n            name: 'Hide for clients',\n            tooltip: 'Hide for clients',\n            confirmOptions: {\n              confirm: true,\n              title: 'Hide flavor for clients',\n              message: `Are you sure you want hide flavor ${this.object.name} for clients`,\n            },\n            apiService: this.flavorsApiService,\n            callType: CallType.Post,\n            apiAction: 'hide_for_clients'\n          }\n        ));\n      } else {\n        actions.push(new ApiCallAction(\n          {\n            object: this.object,\n            icon: {name: 'visibility'},\n            name: 'Display for clients',\n            tooltip: 'Display for clients',\n            confirmOptions: {\n              confirm: true,\n              title: 'Display flavor for clients',\n              message: `Are you sure you want display flavor ${this.object.name} for clients`,\n            },\n            apiService: this.flavorsApiService,\n            callType: CallType.Post,\n            apiAction: 'display_for_clients'\n          }\n        ));\n      }\n    }\n\n    return actions;\n  }\n\n  getDetailsActions(): IAction[] {\n    const actions = [];\n\n    switch (this.state) {\n      case 'create':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`cloud/flavors`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({name: 'Create'}));\n        break;\n      case 'edit':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`cloud/flavors`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({\n          name: 'Save',\n          refreshAfterExecute: false,\n        }));\n        break;\n      default:\n        break;\n    }\n\n    return actions;\n  }\n\n  getDetailsLink(): string {\n    return this.config.getPanelUrl(`cloud/flavors/${this.object.id}`);\n  }\n\n  getCardFields(): IDataField[] {\n    const fields = [\n      {\n        value: `${this.object.vcpus} vCPUs`\n      },\n      {\n        value: `${this.object.memory_mb} MB RAM, ${this.object.root_gb} GB disk`\n      },\n      {\n        name: 'Group',\n        value: this.object.flavor_group || 'n/a'\n      },\n    ];\n\n    return fields;\n  }\n\n  getTabs(): IDetailsTab[] {\n    switch (this.state) {\n      case 'details':\n        return [\n          {\n            tabName: 'Overview',\n            component: FlavorDetailsOverviewComponent,\n          },\n        ];\n      case 'create':\n        return [\n          {\n            tabName: 'Create',\n            component: FlavorEditFormComponent,\n          },\n        ];\n      case 'edit':\n        return [\n          {\n            tabName: 'Create',\n            component: FlavorEditFormComponent,\n          },\n        ];\n    }\n  }\n\n  getCardTags(): string[] {\n    const tags: string[] = [];\n    if (this.isGlobal()) {\n      tags.push('global');\n      if (this.object.display_for_clients) {\n        tags.push('visible');\n      } else {\n        tags.push('hidden');\n      }\n    } else {\n      if (this.object.show_in_fleio && this.object.is_public) {\n        tags.push('visible');\n      } else {\n        tags.push('hidden');\n      }\n    }\n\n    return tags;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IRouteConfig } from '../../../shared/ui-api/interfaces/route-config/route-config';\nimport { FlavorListComponent } from './flavor-list/flavor-list.component';\nimport { FlavorCreateComponent } from './flavor-create/flavor-create.component';\nimport { FlavorDetailsComponent } from './flavor-details/flavor-details.component';\nimport { FlavorEditComponent } from './flavor-edit/flavor-edit.component';\nimport { FlavorListResolver } from '../../../shared/fleio-api/cloud/flavor/flavor-list.resolver';\nimport { FlavorResolver } from '../../../shared/fleio-api/cloud/flavor/flavor.resolver';\nimport { FlavorPermissionsResolver } from '../../../shared/fleio-api/cloud/flavor/flavor-permissions.resolver';\nimport { FlavorCreateOptionsResolver } from '../../../shared/fleio-api/cloud/flavor/flavor-create-options.resolver';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { OrderingDirection } from '../../../shared/ui-api/interfaces/route-config/ordering-directions';\nimport { AuthGuard } from '../../../shared/auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FlavorListComponent,\n    resolve: {\n      flavors: FlavorListResolver,\n    },\n    canActivate: [AuthGuard],\n    data: {\n      config: {\n        feature: 'openstack.flavors',\n        search: {\n          show: true,\n          placeholder: 'Search flavors ...',\n        },\n        subheader: {\n          objectNamePlural: 'flavors',\n          objectName: 'flavor',\n          objectList(data): FleioObjectsList<IBaseFleioObjectModel> {\n            return data.flavors;\n          }\n        },\n        ordering: {\n          default: {\n            field: 'memory_mb',\n            display: 'Memory MB',\n            direction: OrderingDirection.Ascending,\n          },\n          options: [\n            {\n              field: 'name',\n              display: 'Name',\n            },\n            {\n              field: 'region',\n              display: 'Region',\n            },\n            {\n              field: 'vcpus',\n              display: 'vCPUs',\n            },\n            {\n              field: 'memory_mb',\n              display: 'Memory MB',\n            },\n            {\n              field: 'root_gb',\n              display: 'Root',\n            },\n          ]\n        }\n      } as IRouteConfig,\n    },\n    runGuardsAndResolvers: 'always'\n  },\n  {\n    path: 'create',\n    component: FlavorCreateComponent,\n    resolve: {\n      createOptions: FlavorCreateOptionsResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: () => {\n          return 'Create flavor';\n        },\n      } as IRouteConfig,\n    }\n  },\n  {\n    path: ':id',\n    component: FlavorDetailsComponent,\n    resolve: {\n      flavor: FlavorResolver,\n      permissions: FlavorPermissionsResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: (data) => {\n          return data.flavor.name;\n        },\n      } as IRouteConfig,\n    }\n  },\n  {\n    path: ':id/edit',\n    component: FlavorEditComponent,\n    resolve: {\n      flavor: FlavorResolver,\n      createOptions: FlavorCreateOptionsResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: (data) => {\n          return data.flavor.name;\n        },\n      } as IRouteConfig,\n    }\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FlavorsRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlavorCreateComponent } from './flavor-create/flavor-create.component';\nimport { FlavorDetailsComponent } from './flavor-details/flavor-details.component';\nimport { FlavorEditComponent } from './flavor-edit/flavor-edit.component';\nimport { FlavorListComponent } from './flavor-list/flavor-list.component';\nimport { FlavorsRoutingModule } from './flavors-routing.module';\nimport { FlavorDetailsOverviewComponent } from './tabs/flavor-details-overview/flavor-details-overview.component';\nimport { FlavorEditFormComponent } from './tabs/flavor-edit-form/flavor-edit-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ErrorHandlingModule } from '../../../shared/error-handling/error-handling.module';\nimport { ObjectsViewModule } from '../../../shared/ui/objects-view/objects-view.module';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  declarations: [\n    FlavorCreateComponent,\n    FlavorDetailsComponent,\n    FlavorEditComponent,\n    FlavorListComponent,\n    FlavorDetailsOverviewComponent,\n    FlavorEditFormComponent,\n  ],\n  entryComponents: [\n    FlavorDetailsOverviewComponent,\n    FlavorEditFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    FlavorsRoutingModule,\n    ReactiveFormsModule,\n    ErrorHandlingModule,\n    ObjectsViewModule,\n    FlexModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCheckboxModule,\n  ]\n})\nexport class FlavorsModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL2ZsYXZvcnMvdGFicy9mbGF2b3ItZGV0YWlscy1vdmVydmlldy9mbGF2b3ItZGV0YWlscy1vdmVydmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IFlavorModel } from '../../../../../shared/fleio-api/cloud/model/flavor.model';\n\n@Component({\n  selector: 'app-flavor-details-overview',\n  templateUrl: './flavor-details-overview.component.html',\n  styleUrls: ['./flavor-details-overview.component.scss']\n})\nexport class FlavorDetailsOverviewComponent extends DetailsComponentBase<IFlavorModel> implements OnInit {\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL2ZsYXZvcnMvdGFicy9mbGF2b3ItZWRpdC1mb3JtL2ZsYXZvci1lZGl0LWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsFormBase } from '../../../../../shared/ui/objects-view/details-form-base';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { IFlavorModel } from '../../../../../shared/fleio-api/cloud/model/flavor.model';\nimport { FlavorsApiService } from '../../../../../shared/fleio-api/cloud/flavor/flavors-api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { Observable, of } from 'rxjs';\nimport { IActionResult } from '../../../../../shared/ui/objects-view/interfaces/actions/action-result';\nimport { IFlavorCreateOptionsModel } from '../../../../../shared/fleio-api/cloud/model/flavor-create-options.model';\n\n@Component({\n  selector: 'app-flavor-edit-form',\n  templateUrl: './flavor-edit-form.component.html',\n  styleUrls: ['./flavor-edit-form.component.scss']\n})\nexport class FlavorEditFormComponent extends DetailsFormBase<IFlavorModel> implements OnInit {\n  flavorForm = this.formBuilder.group({\n    preserve_id: [true],\n    name: ['', Validators.required],\n    region: ['', Validators.required],\n    memory_mb: ['', Validators.required],\n    vcpus: [1, Validators.required],\n    root_gb: [1, Validators.required],\n    swap: [0, Validators.required],\n    ephemeral_gb: [0, Validators.required],\n    description: [''],\n    is_public: [true],\n    show_in_fleio: [true],\n    out_of_stock: [false],\n  });\n\n  private createOptions: IFlavorCreateOptionsModel;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private flavorsApi: FlavorsApiService,\n    private router: Router,\n    private config: ConfigService,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.createOptions = this.activatedRoute.snapshot.data.createOptions;\n    this.objectController.actionCallback = () => this.saveFlavor();\n    this.flavorForm.patchValue(this.object);\n\n    if (!this.object.id) {\n      // creating new flavor\n      this.flavorForm.controls.region.setValue(this.createOptions.selected_region);\n    }\n  }\n\n  saveFlavor(): Observable<IActionResult> {\n    const value = this.flavorForm.value;\n    this.createOrUpdate(\n      this.flavorsApi,\n      value,\n    ).subscribe(() => {\n      this.router.navigateByUrl(\n        this.config.getPrevUrl('cloud/flavors')\n      ).catch(() => {\n      });\n    });\n\n    return of(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { FlavorsApiService } from './flavors-api.service';\nimport { IFlavorCreateOptionsModel } from '../model/flavor-create-options.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorCreateOptionsResolver implements Resolve<IFlavorCreateOptionsModel> {\n  constructor(private flavorsApiService: FlavorsApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IFlavorCreateOptionsModel> | Promise<IFlavorCreateOptionsModel> | IFlavorCreateOptionsModel {\n    return this.flavorsApiService.createOptions()\n      .pipe(catchError(() => of(null))) as unknown as IFlavorCreateOptionsModel;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { FleioObjectsList } from '../../fleio-objects-list';\nimport { Observable, of } from 'rxjs';\nimport { IListQueryParams } from '../../base-model/list-query-params';\nimport { catchError } from 'rxjs/operators';\nimport { IFlavorModel } from '../model/flavor.model';\nimport { FlavorsApiService } from './flavors-api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorListResolver implements Resolve<FleioObjectsList<IFlavorModel>> {\n  constructor(private flavorsApiService: FlavorsApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<FleioObjectsList<IFlavorModel>> | Promise<FleioObjectsList<IFlavorModel>> |\n    FleioObjectsList<IFlavorModel> {\n    return this.flavorsApiService.list(\n      route.queryParams as IListQueryParams\n    ).pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { IPermissionsModel } from '../../base-model/IPermissionsModel';\nimport { catchError } from 'rxjs/operators';\nimport { FlavorsApiService } from './flavors-api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorPermissionsResolver implements Resolve<IPermissionsModel> {\n  constructor(private flavorsApi: FlavorsApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IPermissionsModel> | Promise<IPermissionsModel> | IPermissionsModel {\n    return this.flavorsApi.permissions().pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { FlavorsApiService } from './flavors-api.service';\nimport { IFlavorModel } from '../model/flavor.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorResolver implements Resolve<IFlavorModel> {\n  constructor(private flavorsApiService: FlavorsApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IFlavorModel> | Promise<IFlavorModel> | IFlavorModel {\n    return this.flavorsApiService.get(route.params.id).pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ConfigService } from '../../../config/config.service';\nimport { FleioApiService } from '../../fleio-api.service';\nimport { HttpClient } from '@angular/common/http';\nimport { IFlavorModel } from '../model/flavor.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlavorsApiService extends FleioApiService<IFlavorModel> {\n  // noinspection JSUnusedGlobalSymbols\n  constructor(protected httpClient: HttpClient, private config: ConfigService) {\n    super(config.getPanelApiUrl('openstack/flavors'));\n  }\n}\n"],"sourceRoot":""}