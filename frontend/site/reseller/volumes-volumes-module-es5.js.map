{"version":3,"sources":["./src/app/reseller/cloud/volumes/dialogs/volume-extend/volume-extend.component.html","./src/app/reseller/cloud/volumes/dialogs/volume-rename/volume-rename.component.html","./src/app/reseller/cloud/volumes/tabs/volume-details-overview/volume-details-overview.component.html","./src/app/reseller/cloud/volumes/tabs/volume-edit-form/volume-edit-form.component.html","./src/app/reseller/cloud/volumes/volume-create/volume-create.component.html","./src/app/reseller/cloud/volumes/volume-details/volume-details.component.html","./src/app/reseller/cloud/volumes/volume-edit/volume-edit.component.html","./src/app/reseller/cloud/volumes/volume-list/volume-list.component.html","./src/app/reseller/cloud/volumes/dialogs/volume-extend/volume-extend.component.scss","./src/app/reseller/cloud/volumes/dialogs/volume-extend/volume-extend.component.ts","./src/app/reseller/cloud/volumes/dialogs/volume-rename/volume-rename.component.scss","./src/app/reseller/cloud/volumes/dialogs/volume-rename/volume-rename.component.ts","./src/app/reseller/cloud/volumes/tabs/volume-details-overview/volume-details-overview.component.scss","./src/app/reseller/cloud/volumes/tabs/volume-details-overview/volume-details-overview.component.ts","./src/app/reseller/cloud/volumes/tabs/volume-edit-form/volume-edit-form.component.scss","./src/app/reseller/cloud/volumes/tabs/volume-edit-form/volume-edit-form.component.ts","./src/app/reseller/cloud/volumes/volume-create/volume-create.component.scss","./src/app/reseller/cloud/volumes/volume-create/volume-create.component.ts","./src/app/reseller/cloud/volumes/volume-details/volume-details.component.scss","./src/app/reseller/cloud/volumes/volume-details/volume-details.component.ts","./src/app/reseller/cloud/volumes/volume-edit/volume-edit.component.scss","./src/app/reseller/cloud/volumes/volume-edit/volume-edit.component.ts","./src/app/reseller/cloud/volumes/volume-list-ui.service.ts","./src/app/reseller/cloud/volumes/volume-list/volume-list.component.scss","./src/app/reseller/cloud/volumes/volume-list/volume-list.component.ts","./src/app/reseller/cloud/volumes/volume-routing.module.ts","./src/app/reseller/cloud/volumes/volume-ui.service.ts","./src/app/reseller/cloud/volumes/volumes.module.ts","./src/app/shared/fleio-api/cloud/volume/volume-create-options.resolver.ts","./src/app/shared/fleio-api/cloud/volume/volume-list.resolver.ts","./src/app/shared/fleio-api/cloud/volume/volume-permissions.resolver.ts","./src/app/shared/fleio-api/cloud/volume/volume.resolver.ts"],"names":[],"mappings":"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","file":"volumes-volumes-module-es5.js","sourcesContent":["module.exports = \"<h1 mat-dialog-title>Extend volume {{data.volume.name}}</h1>\\n<div mat-dialog-content>\\n  <form [formGroup]=\\\"extendForm\\\">\\n    <app-form-errors #formErrors [formGroup]=\\\"extendForm\\\"></app-form-errors>\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Size\\\" type=\\\"number\\\" formControlName=\\\"size\\\" required>\\n      <mat-error>{{backendErrors['size'] || 'Field is required' }}</mat-error>\\n    </mat-form-field>\\n  </form>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n  <button mat-button disabled=\\\"{{!extendForm.controls.size.dirty}}\\\" (click)=\\\"extendVolume()\\\"\\n          [color]=\\\"'primary'\\\">\\n    Extend\\n  </button>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Rename volume {{data.volume.name}}</h1>\\n<div mat-dialog-content>\\n  <div [formGroup]=\\\"renameForm\\\">\\n    <mat-form-field class=\\\"full-width\\\">\\n      <input matInput placeholder=\\\"Name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" required>\\n    </mat-form-field>\\n  </div>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"close()\\\">Cancel</button>\\n  <button mat-button disabled=\\\"{{!renameForm.controls.name.dirty}}\\\" (click)=\\\"renameVolume()\\\"\\n          [color]=\\\"'primary'\\\">\\n    Rename\\n  </button>\\n</div>\\n\"","module.exports = \"<div fxLayout=\\\"column\\\">\\n  <p class=\\\"fl-detail\\\">ID: {{object.id}}</p>\\n  <p class=\\\"fl-detail\\\">\\n    Client:\\n    <a class=\\\"active-link\\\"\\n       [routerLink]=\\\"config.getPanelUrl('clients-users/clients/' + object.client.id)\\\">\\n      {{object.client.name}}\\n    </a>\\n  </p>\\n  <p class=\\\"fl-detail\\\">Size: {{object.size}} GB</p>\\n  <p class=\\\"fl-detail\\\">Type: {{object.type || 'n/a'}}</p>\\n  <p class=\\\"fl-detail\\\">Created at: {{object.created_at | date}}</p>\\n  <p class=\\\"fl-detail\\\">Bootable: {{object.bootable}}</p>\\n  <p *ngIf=\\\"this.object.related_instance_uuid\\\" class=\\\"fl-detail\\\">\\n    This volume is attached to\\n    <a class=\\\"active-link\\\"\\n       routerLink=\\\"{{config.getPanelUrl('cloud/instances/') + this.object.related_instance_uuid}}\\\">\\n      {{this.object.related_instance_uuid}}\\n    </a>\\n  </p>\\n</div>\\n\"","module.exports = \"<app-fl-backdrop *ngIf=\\\"loading\\\" [verticalAlignMiddle]=\\\"true\\\"></app-fl-backdrop>\\n<form [formGroup]=\\\"volumeForm\\\">\\n  <app-form-errors #formErrors [formGroup]=\\\"volumeForm\\\"></app-form-errors>\\n  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n    <div fxLayout=\\\"column\\\" [fxFlex]=\\\"!object.id ? 50 : 100\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Client\\\" type=\\\"text\\\" formControlName=\\\"client\\\" required\\n               [matAutocomplete]=\\\"autocompleteClient\\\">\\n        <mat-autocomplete #autocompleteClient=\\\"matAutocomplete\\\" [displayWith]=\\\"clientDisplay\\\">\\n          <mat-option *ngFor=\\\"let client of filteredClients$ | async\\\" [value]=\\\"client\\\">\\n            {{client.first_name}} {{client.last_name}}\\n          </mat-option>\\n        </mat-autocomplete>\\n        <mat-error>{{backendErrors['name'] || 'This field is required!'}}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-select formControlName=\\\"region\\\" placeholder=\\\"Region\\\" required>\\n          <mat-option *ngFor=\\\"let region of createOptions.regions\\\"\\n                      [value]=\\\"region.id\\\">\\n            {{region.id}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Name\\\" type=\\\"text\\\" formControlName=\\\"name\\\" required>\\n        <mat-error>{{backendErrors['name'] || 'This field is required!' }}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"full-width\\\">\\n        <input matInput placeholder=\\\"Description\\\" type=\\\"text\\\" formControlName=\\\"description\\\">\\n        <mat-error>{{backendErrors['description']}}</mat-error>\\n      </mat-form-field>\\n      <ng-container formGroupName=\\\"source\\\">\\n        <mat-form-field>\\n          <mat-select formControlName=\\\"source_type\\\" placeholder=\\\"Select source type\\\" required>\\n            <mat-option *ngFor=\\\"let sourceType of sourceTypes\\\"\\n                        [value]=\\\"sourceType.name\\\">\\n              {{sourceType.description}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field *ngIf=\\\"volumeForm.value.source.source_type === 'image'\\\">\\n          <input matInput placeholder=\\\"Image\\\" type=\\\"text\\\" formControlName=\\\"source\\\" required\\n                 [matAutocomplete]=\\\"autocompleteImage\\\">\\n          <mat-autocomplete #autocompleteImage=\\\"matAutocomplete\\\" [displayWith]=\\\"imageDisplay\\\">\\n            <mat-option *ngFor=\\\"let image of filteredImages$ | async\\\" [value]=\\\"image\\\">\\n              {{image.name}}\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </ng-container>\\n      <mat-form-field fxFlex=\\\"auto\\\">\\n        <input matInput placeholder=\\\"Size (GB)\\\" type=\\\"number\\\"\\n               formControlName=\\\"size\\\" required>\\n        <mat-error>{{backendErrors['size'] || 'This field is required!' }}</mat-error>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-select formControlName=\\\"type\\\" placeholder=\\\"Volume type\\\" required>\\n          <mat-option *ngFor=\\\"let volumeType of createOptions.types\\\"\\n                      [value]=\\\"volumeType.name\\\">\\n            {{volumeType.type_display}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n    <div *ngIf=\\\"!object.id\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n      <p>\\n        <strong>New OpenStack Volume</strong><br>\\n        You can create a new Volume by first selecting a Client with an OpenStack project assigned <br>\\n        then a Region where the volume will be created then setting <br>\\n        the name and a description for it.<br>\\n      </p>\\n      <p>\\n        <strong>Source Selection</strong><br>\\n        You can create an empty volume or use an image or an existing volume as a source.<br>\\n        Selecting a source will copy the data from that source to the new volume.<br>\\n        In the case you select a bootable image, the volume will also be marked as bootable <br>\\n        and you will be able to boot directly from that volume. <br>\\n      </p>\\n      <p>\\n        <strong>Size</strong><br>\\n        Enter the size of the new volume. This size must be equal of higher than the source size if <br>\\n        any source is selected. For example, if an image has a minimum size of 3GB, the new volume size <br>\\n        must be at least 3GB.\\n      </p>\\n      <p>\\n        <strong>Type</strong><br>\\n        A volume type can also be set while creating the volume. <br>\\n        All volume types available in the selected region will be available to select from.<br>\\n      </p>\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\" [additionalClasses]=\\\"['fl-card-fixed-md']\\\">\\n</app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\"></app-object-details>\\n\"","module.exports = \"<app-object-details [objectController]=\\\"objectController\\\" [additionalClasses]=\\\"['fl-card-fixed-sm']\\\">\\n</app-object-details>\\n\"","module.exports = \"<app-objects-view [objectsListController]=\\\"objectListController\\\"></app-objects-view>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvZGlhbG9ncy92b2x1bWUtZXh0ZW5kL3ZvbHVtZS1leHRlbmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IVolumeModel } from '../../../../../shared/fleio-api/cloud/model/volume.model';\nimport { VolumesApiService } from '../../../../../shared/fleio-api/cloud/volume/volumes-api.service';\n\n@Component({\n  selector: 'app-volume-extend',\n  templateUrl: './volume-extend.component.html',\n  styleUrls: ['./volume-extend.component.scss']\n})\nexport class VolumeExtendComponent implements OnInit {\n  @ViewChild('formErrors', {static: false}) protected formErrors;\n  backendErrors = {};\n  extendForm = this.formBuilder.group({\n    size: ['', Validators.required],\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<VolumeExtendComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { volume: IVolumeModel },\n    private volumesApiService: VolumesApiService,\n    private formBuilder: FormBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    this.extendForm.controls.size.setValue(this.data.volume.size);\n  }\n\n  close() {\n    this.dialogRef.close(false);\n  }\n\n  extendVolume() {\n    this.volumesApiService.objectPostAction(\n      this.data.volume.id,\n      'extend',\n      this.extendForm.value\n    ).subscribe(result => {\n      if (result) {\n        this.dialogRef.close('Volume extended');\n      } else {\n        this.dialogRef.close('');\n      }\n    }, error => {\n      this.backendErrors = error.error;\n      this.formErrors.setBackendErrors(error.error);\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvZGlhbG9ncy92b2x1bWUtcmVuYW1lL3ZvbHVtZS1yZW5hbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IVolumeModel } from '../../../../../shared/fleio-api/cloud/model/volume.model';\nimport { VolumesApiService } from '../../../../../shared/fleio-api/cloud/volume/volumes-api.service';\n\n@Component({\n  selector: 'app-volume-rename',\n  templateUrl: './volume-rename.component.html',\n  styleUrls: ['./volume-rename.component.scss']\n})\nexport class VolumeRenameComponent implements OnInit {\n  renameForm = this.formBuilder.group({\n    name: ['', Validators.required],\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<VolumeRenameComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { volume: IVolumeModel },\n    private volumesApiService: VolumesApiService,\n    private formBuilder: FormBuilder,\n  ) {\n  }\n\n  ngOnInit() {\n    this.renameForm.controls.name.setValue(this.data.volume.name);\n  }\n\n  close() {\n    this.dialogRef.close(false);\n  }\n\n  renameVolume() {\n    this.volumesApiService.objectPostAction(\n      this.data.volume.id,\n      'rename',\n      this.renameForm.value\n    ).subscribe(result => {\n      if (result) {\n        this.dialogRef.close('Volume renamed');\n      } else {\n        this.dialogRef.close('');\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvdGFicy92b2x1bWUtZGV0YWlscy1vdmVydmlldy92b2x1bWUtZGV0YWlscy1vdmVydmlldy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsComponentBase } from '../../../../../shared/ui/objects-view/details-component-base';\nimport { IVolumeModel } from '../../../../../shared/fleio-api/cloud/model/volume.model';\nimport { ConfigService } from '../../../../../shared/config/config.service';\n\n@Component({\n  selector: 'app-volume-details-overview',\n  templateUrl: './volume-details-overview.component.html',\n  styleUrls: ['./volume-details-overview.component.scss']\n})\nexport class VolumeDetailsOverviewComponent extends DetailsComponentBase<IVolumeModel> implements OnInit {\n  constructor(\n    private config: ConfigService,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvdGFicy92b2x1bWUtZWRpdC1mb3JtL3ZvbHVtZS1lZGl0LWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsFormBase } from '../../../../../shared/ui/objects-view/details-form-base';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigService } from '../../../../../shared/config/config.service';\nimport { Observable, of } from 'rxjs';\nimport { IActionResult } from '../../../../../shared/ui/objects-view/interfaces/actions/action-result';\nimport { VolumesApiService } from '../../../../../shared/fleio-api/cloud/volume/volumes-api.service';\nimport { IClientModel } from '../../../../../shared/fleio-api/client-user/model/client.model';\nimport { map, mergeMap, startWith } from 'rxjs/operators';\nimport { ClientsApiService } from '../../../../../shared/fleio-api/client-user/client/clients-api.service';\nimport { IVolumeCreateOptionsModel } from '../../../../../shared/fleio-api/cloud/model/volume-create-options.model';\nimport { IVolumeModel } from '../../../../../shared/fleio-api/cloud/model/volume.model';\nimport { IImageModel } from '../../../../../shared/fleio-api/cloud/model/image.model';\nimport { ImagesApiService } from '../../../../../shared/fleio-api/cloud/image/image-api.service';\n\n@Component({\n  selector: 'app-volume-edit-form',\n  templateUrl: './volume-edit-form.component.html',\n  styleUrls: ['./volume-edit-form.component.scss']\n})\nexport class VolumeEditFormComponent extends DetailsFormBase<IVolumeModel> implements OnInit {\n  volumeForm = this.formBuilder.group({\n    client: ['', Validators.required],\n    region: ['', Validators.required],\n    name: ['', Validators.required],\n    description: [''],\n    source: this.formBuilder.group({\n      source: ['', Validators.required],\n      source_type: ['new', Validators.required],\n    }),\n    size: ['', Validators.required],\n    type: ['', Validators.required],\n  });\n\n  loading = false;\n\n  client = this.volumeForm.controls.client;\n  region = this.volumeForm.controls.region;\n  image = (this.volumeForm.controls.source as FormGroup).controls.source;\n  source_type = (this.volumeForm.controls.source as FormGroup).controls.source_type;\n  filteredClients$: Observable<IClientModel[]>;\n  filteredImages$: Observable<IImageModel[]>;\n  createOptions: IVolumeCreateOptionsModel;\n  sourceTypes: object[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private volumesApi: VolumesApiService,\n    private clientsApi: ClientsApiService,\n    private router: Router,\n    private config: ConfigService,\n    private activatedRoute: ActivatedRoute,\n    private imagesApi: ImagesApiService,\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.createOptions = this.activatedRoute.snapshot.data.createOptions;\n    this.objectController.actionCallback = () => this.saveVolume();\n    this.volumeForm.patchValue(this.object);\n    this.image.disable();\n\n    if (!this.object.id) {\n      // creating new volume\n      this.volumeForm.controls.region.setValue(this.createOptions.selected_region);\n    } else {\n      this.volumeForm.disable();\n    }\n\n    this.filteredClients$ = this.client.valueChanges.pipe(\n      startWith(''),\n      map(value => {\n        return typeof value === 'string' ? value : value.id;\n      }),\n      mergeMap(value => {\n        return this.clientsApi.list({\n          search: value,\n          openstack_project: true,\n        }).pipe(map(clientsList => clientsList.objects));\n      })\n    );\n\n    this.filteredImages$ = this.image.valueChanges.pipe(\n      startWith(''),\n      map(image => {\n        return typeof image === 'string' ? image : image.id;\n      }),\n      mergeMap(value => {\n        return this.imagesApi.list({\n          search: value,\n          region: this.volumeForm.controls.region.value,\n        }).pipe(map(imagesList => imagesList.objects));\n      })\n    );\n\n    this.region.valueChanges.subscribe(region => {\n      this.volumesApi.createOptions({region}).subscribe(createOptions => {\n        this.createOptions = createOptions as IVolumeCreateOptionsModel;\n        this.refreshSourceTypes();\n      });\n    });\n\n    this.source_type.valueChanges.subscribe(sourceType => {\n      if (sourceType === 'image') {\n        this.image.enable();\n      } else {\n        this.image.disable();\n      }\n    });\n\n    this.refreshSourceTypes();\n  }\n\n  refreshSourceTypes() {\n    this.sourceTypes = [{name: 'new', description: 'Create a new empty volume'}];\n    if (this.createOptions.sources) {\n      if (this.createOptions.sources.image && this.createOptions.sources.image.length) {\n        this.sourceTypes.push({name: 'image', description: 'Use image as a source'});\n      }\n      if (this.createOptions.sources.volume && this.createOptions.sources.volume.length) {\n        this.sourceTypes.push({name: 'volume', description: 'Use an existing volume'});\n      }\n    }\n  }\n\n  clientDisplay(client?: IClientModel): string | undefined {\n    if (client) {\n      return client.name ? client.name : `${client.first_name} ${client.last_name}`;\n    } else {\n      return undefined;\n    }\n  }\n\n  imageDisplay(image?: IImageModel): string | undefined {\n    if (image) {\n      return image.name;\n    } else {\n      return undefined;\n    }\n  }\n\n  saveVolume(): Observable<IActionResult> {\n    const value = this.volumeForm.value;\n    if (typeof (value.client) === 'object') {\n      value.client = (value.client as IClientModel).id;\n    }\n\n    if (typeof (value.source.source) === 'object') {\n      value.source.source = (value.source.source as IImageModel).id;\n    }\n\n    this.loading = true;\n    this.createOrUpdate(\n      this.volumesApi,\n      value,\n    ).subscribe(() => {\n      this.loading = false;\n      this.router.navigateByUrl(\n        this.config.getPrevUrl('cloud/volumes')\n      ).catch(() => {\n        this.loading = false;\n      });\n    });\n\n    return of(null);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvdm9sdW1lLWNyZWF0ZS92b2x1bWUtY3JlYXRlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IImageModel } from '../../../../shared/fleio-api/cloud/model/image.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { VolumeListUIService } from '../volume-list-ui.service';\n\n@Component({\n  selector: 'app-volume-create',\n  templateUrl: './volume-create.component.html',\n  styleUrls: ['./volume-create.component.scss']\n})\nexport class VolumeCreateComponent extends DetailsBase<IImageModel> {\n  constructor(route: ActivatedRoute, volumeListUIService: VolumeListUIService) {\n    super(route, volumeListUIService, 'create', null);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvdm9sdW1lLWRldGFpbHMvdm9sdW1lLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IImageModel } from '../../../../shared/fleio-api/cloud/model/image.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { VolumeListUIService } from '../volume-list-ui.service';\n\n@Component({\n  selector: 'app-volume-details',\n  templateUrl: './volume-details.component.html',\n  styleUrls: ['./volume-details.component.scss']\n})\nexport class VolumeDetailsComponent extends DetailsBase<IImageModel> {\n  constructor(route: ActivatedRoute, volumeListUIService: VolumeListUIService) {\n    super(route, volumeListUIService, 'details', 'volume');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvdm9sdW1lLWVkaXQvdm9sdW1lLWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DetailsBase } from '../../../../shared/ui/objects-view/details-base';\nimport { IImageModel } from '../../../../shared/fleio-api/cloud/model/image.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { VolumeListUIService } from '../volume-list-ui.service';\n\n@Component({\n  selector: 'app-volume-edit',\n  templateUrl: './volume-edit.component.html',\n  styleUrls: ['./volume-edit.component.scss']\n})\nexport class VolumeEditComponent extends DetailsBase<IImageModel> {\n  constructor(route: ActivatedRoute, volumeListUIService: VolumeListUIService) {\n    super(route, volumeListUIService, 'edit', 'volume');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IObjectListUIService } from '../../../shared/ui/objects-view/interfaces/object-list-ui-service';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { IObjectUIService } from '../../../shared/ui/objects-view/interfaces/object-ui-service';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { ITableData } from '../../../shared/ui/objects-view/interfaces/table-data/table-data';\nimport { ColumnType } from '../../../shared/ui/objects-view/interfaces/table-data/column-definition';\nimport { ITableRow } from '../../../shared/ui/objects-view/interfaces/table-data/table-row';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { VolumesApiService } from '../../../shared/fleio-api/cloud/volume/volumes-api.service';\nimport { VolumeUiService } from './volume-ui.service';\nimport { IVolumeModel } from '../../../shared/fleio-api/cloud/model/volume.model';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VolumeListUIService implements IObjectListUIService {\n  constructor(\n    private router: Router, private config: ConfigService,\n    private volumesApiService: VolumesApiService,\n    private matDialog: MatDialog,\n    ) {\n  }\n\n  getObjectUIService(\n    object: IBaseFleioObjectModel, permissions: IPermissionsModel, state: string\n  ): IObjectUIService {\n      return new VolumeUiService(\n        object as IVolumeModel, permissions, state, this.router, this.config, this.volumesApiService,\n        this.matDialog,\n      );\n  }\n\n  getTableData(objectList: FleioObjectsList<IVolumeModel>): ITableData {\n    const tableData: ITableData = {\n      header: {\n        columns: [\n          { type: ColumnType.Value, displayName: 'Name', enableSort: true, fieldName: 'name' },\n          { type: ColumnType.Value, displayName: 'Region', enableSort: false, fieldName: 'region' },\n          { type: ColumnType.Value, displayName: 'Size', enableSort: false, fieldName: 'size' },\n          { type: ColumnType.Value, displayName: 'Client', enableSort: false, fieldName: 'client' },\n          { type: ColumnType.Actions, displayName: 'Actions', enableSort: false, fieldName: '(actions)' },\n        ],\n        columnNames: [ 'name', 'region', 'size', 'client', '(actions)' ],\n        statusColumn: 'name',\n      },\n      rows: [],\n    };\n\n    for (const volume of objectList.objects) {\n      const rowUIService = this.getObjectUIService(volume, objectList.permissions, 'table-view');\n      const row: ITableRow = {\n        cells: {\n          name: { text: volume.name},\n          region: { text: volume.region || ''},\n          size: { text: volume.size ? (volume.size + ' GB') : ''},\n          client: {\n            text: volume.client ? volume.client.name : '',\n            url: volume.client ? this.config.getPanelUrl(`clients-users/clients/${volume.client.id}`) : null,\n          },\n        },\n        icon: rowUIService.getIcon(),\n        status: rowUIService.getStatus(),\n        actions: rowUIService.getActions(),\n        url: rowUIService.getDetailsLink(),\n      };\n\n      tableData.rows.push(row);\n    }\n\n    return tableData;\n  }\n\n  getActions(objectList: FleioObjectsList<IBaseFleioObjectModel>): IAction[] {\n    return [\n      new RouterLinkAction({\n        name: 'Create new volume',\n        tooltip: 'Create new volume',\n        icon: { name: 'add' },\n        router: this.router,\n        routerUrl: this.config.getPanelUrl('cloud/volumes/create')\n      })\n    ];\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc2VsbGVyL2Nsb3VkL3ZvbHVtZXMvdm9sdW1lLWxpc3Qvdm9sdW1lLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ListBase } from '../../../../shared/ui/objects-view/list-base';\nimport { ActivatedRoute } from '@angular/router';\nimport { RefreshService } from '../../../../shared/ui-api/refresh.service';\nimport { IVolumeModel } from '../../../../shared/fleio-api/cloud/model/volume.model';\nimport { VolumeListUIService } from '../volume-list-ui.service';\n\n@Component({\n  selector: 'app-volume-list',\n  templateUrl: './volume-list.component.html',\n  styleUrls: ['./volume-list.component.scss']\n})\nexport class VolumeListComponent extends ListBase<IVolumeModel>implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute, private volumeListUIService: VolumeListUIService,\n    private refreshService: RefreshService,\n  ) {\n    super(route, volumeListUIService, refreshService, 'volumes');\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IRouteConfig } from '../../../shared/ui-api/interfaces/route-config/route-config';\nimport { VolumeListComponent } from './volume-list/volume-list.component';\nimport { VolumeCreateComponent } from './volume-create/volume-create.component';\nimport { VolumeDetailsComponent } from './volume-details/volume-details.component';\nimport { VolumeEditComponent } from './volume-edit/volume-edit.component';\nimport { VolumeResolver } from '../../../shared/fleio-api/cloud/volume/volume.resolver';\nimport { VolumePermissionsResolver } from '../../../shared/fleio-api/cloud/volume/volume-permissions.resolver';\nimport { VolumeListResolver } from '../../../shared/fleio-api/cloud/volume/volume-list.resolver';\nimport { VolumeCreateOptionsResolver } from '../../../shared/fleio-api/cloud/volume/volume-create-options.resolver';\nimport { FleioObjectsList } from '../../../shared/fleio-api/fleio-objects-list';\nimport { IBaseFleioObjectModel } from '../../../shared/fleio-api/base-model/base-fleio-object.model';\nimport { OrderingDirection } from '../../../shared/ui-api/interfaces/route-config/ordering-directions';\nimport { AuthGuard } from '../../../shared/auth/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VolumeListComponent,\n    resolve: {\n      volumes: VolumeListResolver,\n    },\n    canActivate: [AuthGuard],\n    data: {\n      config: {\n        feature: 'openstack.volumes',\n        search: {\n          show: true,\n          placeholder: 'Search volumes ...',\n        },\n        subheader: {\n          objectNamePlural: 'volumes',\n          objectName: 'volume',\n          objectList(data): FleioObjectsList<IBaseFleioObjectModel> {\n            return data.volumes;\n          }\n        },\n        ordering: {\n          default: {\n            display: 'Date created',\n            field: 'created_at',\n            direction: OrderingDirection.Descending,\n          },\n          options: [\n            {display: 'Name', field: 'name'},\n            {display: 'Status', field: 'status'},\n            {display: 'Size', field: 'size'},\n            {display: 'Date created', field: 'created_at'},\n          ]\n        }\n      } as IRouteConfig,\n    },\n    runGuardsAndResolvers: 'always'\n  },\n  {\n    path: 'create',\n    component: VolumeCreateComponent,\n    resolve: {\n      createOptions: VolumeCreateOptionsResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: () => {\n          return 'Create volume';\n        },\n      } as IRouteConfig,\n    }\n  },\n  {\n    path: ':id',\n    component: VolumeDetailsComponent,\n    resolve: {\n      volume: VolumeResolver,\n      permissions: VolumePermissionsResolver,\n    },\n    data: {\n      config: {\n        getBreadCrumbDetail: (data) => {\n          return data.volume.name;\n        },\n      } as IRouteConfig,\n    },\n    runGuardsAndResolvers: 'always',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VolumesRoutingModule {\n}\n","import { IPermissionsModel } from '../../../shared/fleio-api/base-model/IPermissionsModel';\nimport { IIcon } from '../../../shared/ui/common/interfaces/icon';\nimport { ITitle } from '../../../shared/ui/objects-view/interfaces/card-data/card-title';\nimport { IObjectStatus, StatusType, StatusValue } from '../../../shared/ui/objects-view/interfaces/object-status';\nimport { ObjectUIServiceBase } from '../../../shared/ui/objects-view/object-ui-service-base';\nimport { IAction } from '../../../shared/ui/objects-view/interfaces/actions/action';\nimport { RouterLinkAction } from '../../../shared/ui/objects-view/actions/router-link-action';\nimport { Router } from '@angular/router';\nimport { ConfigService } from '../../../shared/config/config.service';\nimport { IDataField } from '../../../shared/ui/objects-view/interfaces/card-data/data-field';\nimport { ApiCallAction, CallType } from '../../../shared/ui/objects-view/actions/api-call-action';\nimport { IDetailsTab } from '../../../shared/ui/objects-view/interfaces/details/details-tab';\nimport { DatePipe } from '@angular/common';\nimport { CallbackAction } from '../../../shared/ui/objects-view/actions/callback-action';\nimport { VolumesApiService } from '../../../shared/fleio-api/cloud/volume/volumes-api.service';\nimport { IVolumeModel } from '../../../shared/fleio-api/cloud/model/volume.model';\nimport { VolumeDetailsOverviewComponent } from './tabs/volume-details-overview/volume-details-overview.component';\nimport { VolumeEditFormComponent } from './tabs/volume-edit-form/volume-edit-form.component';\nimport { map } from 'rxjs/operators';\nimport { IActionResult } from '../../../shared/ui/objects-view/interfaces/actions/action-result';\nimport { MatDialog } from '@angular/material/dialog';\nimport { VolumeRenameComponent } from './dialogs/volume-rename/volume-rename.component';\nimport { VolumeExtendComponent } from './dialogs/volume-extend/volume-extend.component';\n\nexport class VolumeUiService extends ObjectUIServiceBase<IVolumeModel> {\n  private readonly router: Router;\n  private readonly config: ConfigService;\n  private readonly volumesApiService: VolumesApiService;\n  private readonly datePipe: DatePipe;\n  private readonly matDialog: MatDialog;\n\n\n  constructor(\n    volume: IVolumeModel, permissions: IPermissionsModel, state: string,\n    router: Router, config: ConfigService, volumesApiService: VolumesApiService, matDialog: MatDialog,\n  ) {\n    super(volume, permissions, state);\n    this.matDialog = matDialog;\n    this.router = router;\n    this.config = config;\n    this.volumesApiService = volumesApiService;\n    this.datePipe = new DatePipe(this.config.locale);\n  }\n\n  getIcon(): IIcon {\n    return null;\n  }\n\n  getStatus(): IObjectStatus {\n    switch (this.object.status) {\n      case 'error':\n        return {\n          value: StatusValue.Error,\n          type: StatusType.Defined,\n        };\n      case 'deleting':\n        return {\n          value: StatusValue.Error,\n          type: StatusType.Changing,\n        };\n      case 'in-use':\n        return {\n          value: StatusValue.Warning,\n          type: StatusType.Defined,\n        };\n      case 'extending':\n      case 'attaching':\n        return {\n          value: StatusValue.Warning,\n          type: StatusType.Changing,\n        };\n      case 'available':\n      default:\n        return {\n          value: StatusValue.Enabled,\n          type: StatusType.Defined,\n        };\n    }\n  }\n\n  getTitle(): ITitle {\n    switch (this.state) {\n      case 'edit':\n        return {\n          text: `Edit volume ${this.object.name || this.object.id}`,\n        };\n\n      case 'create':\n        return {\n          text: `Create new volume`,\n        };\n\n      default:\n        return {\n          text: `${this.object.name || this.object.id}`,\n          subText: this.object.status.toLocaleUpperCase(),\n        };\n    }\n  }\n\n  getActions(): IAction[] {\n    const actions: IAction[] = [];\n\n    actions.push(new CallbackAction(\n      {\n        object: this.object,\n        icon: {name: 'edit'},\n        tooltip: 'Rename volume',\n        name: 'Rename',\n        callback: () => {\n          return this.matDialog.open(\n            VolumeRenameComponent, {\n              data: {volume: this.object}\n            }).afterClosed().pipe(map(result => {\n              if (result === false) {\n                return;\n              }\n              this.router.navigateByUrl(\n                this.config.getPanelUrl('cloud/volumes')\n              ).catch();\n              return {message: result} as IActionResult;\n            }));\n        }\n      }\n    ));\n\n    actions.push(new CallbackAction(\n      {\n        object: this.object,\n        icon: {name: 'resize', class: 'fl-icons'},\n        tooltip: 'Extend volume',\n        name: 'Extend',\n        callback: () => {\n          return this.matDialog.open(\n            VolumeExtendComponent, {\n              data: {volume: this.object}\n            }).afterClosed().pipe(map(result => {\n              if (result === false) {\n                return;\n              }\n              this.router.navigateByUrl(\n                this.config.getPanelUrl('cloud/volumes')\n              ).catch();\n              return {message: result} as IActionResult;\n            }));\n        }\n      }\n    ));\n\n    actions.push(new ApiCallAction(\n      {\n        object: this.object,\n        icon: {name: 'delete'},\n        name: 'Delete',\n        tooltip: 'Delete',\n        confirmOptions: {\n          confirm: true,\n          title: 'Delete volume',\n          message: `Are you sure you want to delete volume ${this.object.name}`,\n        },\n        apiService: this.volumesApiService,\n        callType: CallType.Delete,\n      }\n    ));\n\n    return actions;\n  }\n\n  getDetailsActions(): IAction[] {\n    const actions = [];\n\n    switch (this.state) {\n      case 'create':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`cloud/volumes`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({name: 'Create'}));\n        break;\n      case 'edit':\n        actions.push(new RouterLinkAction({\n            name: 'Cancel',\n            routerUrl: this.config.getPrevUrl(`cloud/volumes`),\n            router: this.router,\n          }\n        ));\n        actions.push(new CallbackAction({name: 'Save'}));\n        break;\n      default:\n        break;\n    }\n\n    return actions;\n  }\n\n  getDetailsLink(): string {\n    return this.config.getPanelUrl(`cloud/volumes/${this.object.id}`);\n  }\n\n  getCardFields(): IDataField[] {\n    const fields = [\n      {\n        value: `${this.object.size} GB, ${this.object.region}`\n      },\n      {\n        name: 'Client',\n        value: this.object.client.name,\n      },\n      {\n        value: this.object.type,\n      }\n    ];\n\n    return fields;\n  }\n\n  getTabs(): IDetailsTab[] {\n    switch (this.state) {\n      case 'details':\n        return [\n          {\n            tabName: 'Overview',\n            component: VolumeDetailsOverviewComponent,\n          },\n        ];\n      case 'create':\n        return [\n          {\n            tabName: 'Create',\n            component: VolumeEditFormComponent,\n          },\n        ];\n      case 'edit':\n        return [\n          {\n            tabName: 'Create',\n            component: VolumeEditFormComponent,\n          },\n        ];\n    }\n  }\n\n  getCardTags(): string[] {\n    const tags: string[] = [];\n    return tags;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { VolumeCreateComponent } from './volume-create/volume-create.component';\nimport { VolumeDetailsComponent } from './volume-details/volume-details.component';\nimport { VolumeEditComponent } from './volume-edit/volume-edit.component';\nimport { VolumeListComponent } from './volume-list/volume-list.component';\nimport { VolumesRoutingModule } from './volume-routing.module';\nimport { VolumeDetailsOverviewComponent } from './tabs/volume-details-overview/volume-details-overview.component';\nimport { VolumeEditFormComponent } from './tabs/volume-edit-form/volume-edit-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ErrorHandlingModule } from '../../../shared/error-handling/error-handling.module';\nimport { ObjectsViewModule } from '../../../shared/ui/objects-view/objects-view.module';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { VolumeRenameComponent } from './dialogs/volume-rename/volume-rename.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { VolumeListUIService } from './volume-list-ui.service';\nimport { VolumeExtendComponent } from './dialogs/volume-extend/volume-extend.component';\nimport { UiModule } from '../../../shared/ui/ui.module';\n\n\n@NgModule({\n  declarations: [\n    VolumeCreateComponent,\n    VolumeDetailsComponent,\n    VolumeEditComponent,\n    VolumeListComponent,\n    VolumeDetailsOverviewComponent,\n    VolumeEditFormComponent,\n    VolumeRenameComponent,\n    VolumeExtendComponent,\n  ],\n  entryComponents: [\n    VolumeDetailsOverviewComponent,\n    VolumeEditFormComponent,\n    VolumeRenameComponent,\n    VolumeExtendComponent,\n  ],\n  imports: [\n    CommonModule,\n    VolumesRoutingModule,\n    ReactiveFormsModule,\n    ErrorHandlingModule,\n    ObjectsViewModule,\n    FlexModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatDialogModule,\n    MatButtonModule,\n    UiModule,\n  ],\n  providers: [\n    {\n      provide: VolumeListUIService,\n      useClass: VolumeListUIService,\n      multi: false,\n    },\n  ]\n})\nexport class VolumesModule {\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { VolumesApiService } from './volumes-api.service';\nimport { IVolumeCreateOptionsModel } from '../model/volume-create-options.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VolumeCreateOptionsResolver implements Resolve<IVolumeCreateOptionsModel> {\n  constructor(private volumesApiService: VolumesApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IVolumeCreateOptionsModel> | Promise<IVolumeCreateOptionsModel> | IVolumeCreateOptionsModel {\n    return this.volumesApiService.createOptions()\n      .pipe(catchError(() => of(null))) as unknown as IVolumeCreateOptionsModel;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { FleioObjectsList } from '../../fleio-objects-list';\nimport { Observable, of } from 'rxjs';\nimport { IListQueryParams } from '../../base-model/list-query-params';\nimport { catchError } from 'rxjs/operators';\nimport { VolumesApiService } from './volumes-api.service';\nimport { IVolumeModel } from '../model/volume.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VolumeListResolver implements Resolve<FleioObjectsList<IVolumeModel>> {\n  constructor(private volumesApiService: VolumesApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<FleioObjectsList<IVolumeModel>> | Promise<FleioObjectsList<IVolumeModel>> |\n    FleioObjectsList<IVolumeModel> {\n    return this.volumesApiService.list(\n      route.queryParams as IListQueryParams\n    ).pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { IPermissionsModel } from '../../base-model/IPermissionsModel';\nimport { catchError } from 'rxjs/operators';\nimport { VolumesApiService } from './volumes-api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VolumePermissionsResolver implements Resolve<IPermissionsModel> {\n  constructor(private volumesApi: VolumesApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IPermissionsModel> | Promise<IPermissionsModel> | IPermissionsModel {\n    return this.volumesApi.permissions().pipe(catchError(() => of(null)));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { IVolumeModel } from '../model/volume.model';\nimport { VolumesApiService } from './volumes-api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VolumeResolver implements Resolve<IVolumeModel> {\n  constructor(private volumesApiService: VolumesApiService) {\n  }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<IVolumeModel> | Promise<IVolumeModel> | IVolumeModel {\n    return this.volumesApiService.get(route.params.id).pipe(catchError(() => of(null)));\n  }\n}\n"],"sourceRoot":""}