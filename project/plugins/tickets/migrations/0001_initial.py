# Generated by Django 2.1 on 2018-09-10 12:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import plugins.tickets.models.utils.ticket_id


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('disk_file', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('content_type', models.CharField(blank=True, default=None, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=32, unique=True)),
                ('email', models.EmailField(max_length=127)),
                ('notification_on_ticket_open_to_staff', models.BooleanField()),
                ('notification_on_staff_user_reply_to_staff', models.BooleanField()),
                ('notification_to_user_on_ticket_opened', models.BooleanField(blank=True, default=False)),
                ('notification_to_user_on_ticket_closed', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('sender_address', models.CharField(max_length=256)),
                ('to', models.CharField(max_length=256)),
                ('cc', models.CharField(blank=True, max_length=1024, null=True)),
                ('subject', models.CharField(blank=True, default=None, max_length=1024, null=True)),
                ('body', models.CharField(max_length=10240)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.CharField(default=plugins.tickets.models.utils.ticket_id.TicketId('tickets.Ticket'), max_length=64, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=10240)),
                ('priority', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('internal_status', models.CharField(max_length=100)),
                ('cc_recipients', models.CharField(blank=True, max_length=1024, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tickets.Department')),
                ('email_message', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='tickets.EmailMessage')),
            ],
            options={
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.CreateModel(
            name='TicketLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linked_ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_ticket', to='tickets.Ticket')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_ticket', to='tickets.Ticket')),
            ],
            options={
                'verbose_name_plural': 'Ticket links',
            },
        ),
        migrations.CreateModel(
            name='TicketNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('note_text', models.CharField(blank=True, max_length=10240, null=True)),
                ('last_edited', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='tickets.Ticket')),
            ],
        ),
        migrations.CreateModel(
            name='TicketsUserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_on_ticket_opened', models.BooleanField(default=False)),
                ('notify_on_ticket_closed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_user_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TicketUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('reply_text', models.CharField(blank=True, max_length=10240, null=True)),
                ('new_status', models.CharField(blank=True, max_length=100, null=True)),
                ('new_department', models.CharField(blank=True, max_length=100, null=True)),
                ('new_priority', models.CharField(blank=True, max_length=100, null=True)),
                ('new_internal_status', models.CharField(blank=True, max_length=100, null=True)),
                ('description_changed', models.BooleanField(blank=True, default=False)),
                ('title_changed', models.BooleanField(blank=True, default=False)),
                ('new_client', models.CharField(blank=True, max_length=100, null=True)),
                ('new_cc', models.CharField(blank=True, max_length=1024, null=True)),
                ('last_edited', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('email_message', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='tickets.EmailMessage')),
                ('last_edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('new_assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='tickets.Ticket')),
            ],
        ),
        migrations.AddField(
            model_name='ticket',
            name='linked_tickets',
            field=models.ManyToManyField(blank=True, through='tickets.TicketLink', to='tickets.Ticket'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='email_message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='tickets.EmailMessage'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='ticket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='tickets.Ticket'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='ticket_note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='tickets.TicketNote'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='ticket_update',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='tickets.TicketUpdate'),
        ),
        migrations.AlterUniqueTogether(
            name='ticketlink',
            unique_together={('ticket', 'linked_ticket')},
        ),
    ]
